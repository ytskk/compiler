Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> file
Rule 1     file -> unit
Rule 2     file -> file unit
Rule 3     unit -> fun_def
Rule 4     unit -> declaration ;
Rule 5     fun_def -> declaration_specifier ID ( ) compound_statement
Rule 6     fun_def -> declaration_specifier ID ( declaration_list ) compound_statement
Rule 7     statement -> expression ;
Rule 8     statement -> declaration ;
Rule 9     statement -> compound_statement
Rule 10    expression -> ID ( )
Rule 11    expression -> ID ( expression_list )
Rule 12    expression -> ASM ( S_CONST )
Rule 13    expression -> PRINTSTR ( S_CONST )
Rule 14    declaration_specifier -> VOID
Rule 15    declaration_specifier -> INT
Rule 16    declaration_specifier -> CHAR
Rule 17    declaration_specifier -> FLOAT
Rule 18    declaration_specifier -> INT pointer
Rule 19    declaration_specifier -> CHAR pointer
Rule 20    declaration_specifier -> FLOAT pointer
Rule 21    statement -> RETURN expression ;
Rule 22    statement -> RETURN ;
Rule 23    statement -> BREAK ;
Rule 24    statement -> CONTINUE ;
Rule 25    statement -> WHILE ( expression ) statement
Rule 26    statement -> DO statement WHILE ( expression ) ;
Rule 27    statement -> FOR ( expression ; expression ; expression ) statement
Rule 28    statement -> IF ( expression ) statement
Rule 29    statement -> IF ( expression ) statement ELSE statement
Rule 30    declaration -> declaration_specifier ID [ NUMBER ] = { expression_list }
Rule 31    declaration -> declaration_specifier ID [ NUMBER ]
Rule 32    declaration -> declaration_specifier ID [ FLOAT ] = { expression_list }
Rule 33    declaration -> declaration_specifier ID [ FLOAT ]
Rule 34    declaration -> declaration_specifier ID = expression
Rule 35    declaration -> declaration_specifier ID
Rule 36    expression -> MINUSMINUS ID
Rule 37    expression -> ID MINUSMINUS
Rule 38    expression -> PLUSPLUS ID
Rule 39    expression -> ID PLUSPLUS
Rule 40    expression -> ID XOREQUAL expression
Rule 41    expression -> ID ANDEQUAL expression
Rule 42    expression -> ID OREQUAL expression
Rule 43    expression -> ID TIMESEQUAL expression
Rule 44    expression -> ID DIVEQUAL expression
Rule 45    expression -> ID PLUSEQUAL expression
Rule 46    expression -> ID MINUSEQUAL expression
Rule 47    expression -> ID = expression
Rule 48    expression_list -> expression
Rule 49    expression_list -> expression_list , expression
Rule 50    declaration_list -> declaration
Rule 51    declaration_list -> declaration_list , declaration
Rule 52    expression -> expression + expression
Rule 53    expression -> expression - expression
Rule 54    expression -> expression * expression
Rule 55    expression -> expression / expression
Rule 56    expression -> expression & expression
Rule 57    expression -> expression | expression
Rule 58    expression -> expression ^ expression
Rule 59    expression -> ~ expression
Rule 60    expression -> - expression
Rule 61    expression -> ( expression )
Rule 62    expression -> ID [ expression ]
Rule 63    expression -> ID [ expression ] = expression
Rule 64    expression -> NUMBER
Rule 65    expression -> FLOAT
Rule 66    expression -> ID
Rule 67    expression -> & ID
Rule 68    expression -> & ID [ expression ]
Rule 69    expression -> * ID = expression
Rule 70    expression -> * ID
Rule 71    pointer -> *
Rule 72    pointer -> pointer *
Rule 73    expression -> C_CONST
Rule 74    expression -> eq_exp
Rule 75    eq_exp -> expression EQ expression
Rule 76    eq_exp -> expression NE expression
Rule 77    eq_exp -> expression LOR expression
Rule 78    eq_exp -> expression LAND expression
Rule 79    eq_exp -> expression < expression
Rule 80    eq_exp -> expression > expression
Rule 81    eq_exp -> expression GE expression
Rule 82    eq_exp -> expression LE expression
Rule 83    compound_statement -> { statement_list }
Rule 84    compound_statement -> { }
Rule 85    statement_list -> statement
Rule 86    statement_list -> statement_list statement

Terminals, with rules where they appear

&                    : 56 67 68
(                    : 5 6 10 11 12 13 25 26 27 28 29 61
)                    : 5 6 10 11 12 13 25 26 27 28 29 61
*                    : 54 69 70 71 72
+                    : 52
,                    : 49 51
-                    : 53 60
/                    : 55
;                    : 4 7 8 21 22 23 24 26 27 27
<                    : 79
=                    : 30 32 34 47 63 69
>                    : 80
ANDEQUAL             : 41
ASM                  : 12
BREAK                : 23
CHAR                 : 16 19
CONTINUE             : 24
C_CONST              : 73
DIVEQUAL             : 44
DO                   : 26
ELSE                 : 29
EQ                   : 75
FLOAT                : 17 20 32 33 65
FOR                  : 27
GE                   : 81
ID                   : 5 6 10 11 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 62 63 66 67 68 69 70
IF                   : 28 29
INT                  : 15 18
LAND                 : 78
LE                   : 82
LOR                  : 77
MINUSEQUAL           : 46
MINUSMINUS           : 36 37
NE                   : 76
NUMBER               : 30 31 64
OREQUAL              : 42
PLUSEQUAL            : 45
PLUSPLUS             : 38 39
PRINTSTR             : 13
RETURN               : 21 22
S_CONST              : 12 13
TIMESEQUAL           : 43
VOID                 : 14
WHILE                : 25 26
XOREQUAL             : 40
[                    : 30 31 32 33 62 63 68
]                    : 30 31 32 33 62 63 68
^                    : 58
error                : 
{                    : 30 32 83 84
|                    : 57
}                    : 30 32 83 84
~                    : 59

Nonterminals, with rules where they appear

compound_statement   : 5 6 9
declaration          : 4 8 50 51
declaration_list     : 6 51
declaration_specifier : 5 6 30 31 32 33 34 35
eq_exp               : 74
expression           : 7 21 25 26 27 27 27 28 29 34 40 41 42 43 44 45 46 47 48 49 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 60 61 62 63 63 68 69 75 75 76 76 77 77 78 78 79 79 80 80 81 81 82 82
expression_list      : 11 30 32 49
file                 : 2 0
fun_def              : 3
pointer              : 18 19 20 72
statement            : 25 26 27 28 29 29 85 86
statement_list       : 83 86
unit                 : 1 2

Parsing method: LALR

state 0

    (0) S' -> . file
    (1) file -> . unit
    (2) file -> . file unit
    (3) unit -> . fun_def
    (4) unit -> . declaration ;
    (5) fun_def -> . declaration_specifier ID ( ) compound_statement
    (6) fun_def -> . declaration_specifier ID ( declaration_list ) compound_statement
    (30) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (31) declaration -> . declaration_specifier ID [ NUMBER ]
    (32) declaration -> . declaration_specifier ID [ FLOAT ] = { expression_list }
    (33) declaration -> . declaration_specifier ID [ FLOAT ]
    (34) declaration -> . declaration_specifier ID = expression
    (35) declaration -> . declaration_specifier ID
    (14) declaration_specifier -> . VOID
    (15) declaration_specifier -> . INT
    (16) declaration_specifier -> . CHAR
    (17) declaration_specifier -> . FLOAT
    (18) declaration_specifier -> . INT pointer
    (19) declaration_specifier -> . CHAR pointer
    (20) declaration_specifier -> . FLOAT pointer

    VOID            shift and go to state 7
    INT             shift and go to state 8
    CHAR            shift and go to state 9
    FLOAT           shift and go to state 6

    file                           shift and go to state 1
    unit                           shift and go to state 2
    fun_def                        shift and go to state 3
    declaration                    shift and go to state 4
    declaration_specifier          shift and go to state 5

state 1

    (0) S' -> file .
    (2) file -> file . unit
    (3) unit -> . fun_def
    (4) unit -> . declaration ;
    (5) fun_def -> . declaration_specifier ID ( ) compound_statement
    (6) fun_def -> . declaration_specifier ID ( declaration_list ) compound_statement
    (30) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (31) declaration -> . declaration_specifier ID [ NUMBER ]
    (32) declaration -> . declaration_specifier ID [ FLOAT ] = { expression_list }
    (33) declaration -> . declaration_specifier ID [ FLOAT ]
    (34) declaration -> . declaration_specifier ID = expression
    (35) declaration -> . declaration_specifier ID
    (14) declaration_specifier -> . VOID
    (15) declaration_specifier -> . INT
    (16) declaration_specifier -> . CHAR
    (17) declaration_specifier -> . FLOAT
    (18) declaration_specifier -> . INT pointer
    (19) declaration_specifier -> . CHAR pointer
    (20) declaration_specifier -> . FLOAT pointer

    VOID            shift and go to state 7
    INT             shift and go to state 8
    CHAR            shift and go to state 9
    FLOAT           shift and go to state 6

    unit                           shift and go to state 10
    fun_def                        shift and go to state 3
    declaration                    shift and go to state 4
    declaration_specifier          shift and go to state 5

state 2

    (1) file -> unit .

    VOID            reduce using rule 1 (file -> unit .)
    INT             reduce using rule 1 (file -> unit .)
    CHAR            reduce using rule 1 (file -> unit .)
    FLOAT           reduce using rule 1 (file -> unit .)
    $end            reduce using rule 1 (file -> unit .)


state 3

    (3) unit -> fun_def .

    VOID            reduce using rule 3 (unit -> fun_def .)
    INT             reduce using rule 3 (unit -> fun_def .)
    CHAR            reduce using rule 3 (unit -> fun_def .)
    FLOAT           reduce using rule 3 (unit -> fun_def .)
    $end            reduce using rule 3 (unit -> fun_def .)


state 4

    (4) unit -> declaration . ;

    ;               shift and go to state 11


state 5

    (5) fun_def -> declaration_specifier . ID ( ) compound_statement
    (6) fun_def -> declaration_specifier . ID ( declaration_list ) compound_statement
    (30) declaration -> declaration_specifier . ID [ NUMBER ] = { expression_list }
    (31) declaration -> declaration_specifier . ID [ NUMBER ]
    (32) declaration -> declaration_specifier . ID [ FLOAT ] = { expression_list }
    (33) declaration -> declaration_specifier . ID [ FLOAT ]
    (34) declaration -> declaration_specifier . ID = expression
    (35) declaration -> declaration_specifier . ID

    ID              shift and go to state 12


state 6

    (17) declaration_specifier -> FLOAT .
    (20) declaration_specifier -> FLOAT . pointer
    (71) pointer -> . *
    (72) pointer -> . pointer *

    ID              reduce using rule 17 (declaration_specifier -> FLOAT .)
    *               shift and go to state 14

    pointer                        shift and go to state 13

state 7

    (14) declaration_specifier -> VOID .

    ID              reduce using rule 14 (declaration_specifier -> VOID .)


state 8

    (15) declaration_specifier -> INT .
    (18) declaration_specifier -> INT . pointer
    (71) pointer -> . *
    (72) pointer -> . pointer *

    ID              reduce using rule 15 (declaration_specifier -> INT .)
    *               shift and go to state 14

    pointer                        shift and go to state 15

state 9

    (16) declaration_specifier -> CHAR .
    (19) declaration_specifier -> CHAR . pointer
    (71) pointer -> . *
    (72) pointer -> . pointer *

    ID              reduce using rule 16 (declaration_specifier -> CHAR .)
    *               shift and go to state 14

    pointer                        shift and go to state 16

state 10

    (2) file -> file unit .

    VOID            reduce using rule 2 (file -> file unit .)
    INT             reduce using rule 2 (file -> file unit .)
    CHAR            reduce using rule 2 (file -> file unit .)
    FLOAT           reduce using rule 2 (file -> file unit .)
    $end            reduce using rule 2 (file -> file unit .)


state 11

    (4) unit -> declaration ; .

    VOID            reduce using rule 4 (unit -> declaration ; .)
    INT             reduce using rule 4 (unit -> declaration ; .)
    CHAR            reduce using rule 4 (unit -> declaration ; .)
    FLOAT           reduce using rule 4 (unit -> declaration ; .)
    $end            reduce using rule 4 (unit -> declaration ; .)


state 12

    (5) fun_def -> declaration_specifier ID . ( ) compound_statement
    (6) fun_def -> declaration_specifier ID . ( declaration_list ) compound_statement
    (30) declaration -> declaration_specifier ID . [ NUMBER ] = { expression_list }
    (31) declaration -> declaration_specifier ID . [ NUMBER ]
    (32) declaration -> declaration_specifier ID . [ FLOAT ] = { expression_list }
    (33) declaration -> declaration_specifier ID . [ FLOAT ]
    (34) declaration -> declaration_specifier ID . = expression
    (35) declaration -> declaration_specifier ID .

    (               shift and go to state 17
    [               shift and go to state 18
    =               shift and go to state 19
    ;               reduce using rule 35 (declaration -> declaration_specifier ID .)


state 13

    (20) declaration_specifier -> FLOAT pointer .
    (72) pointer -> pointer . *

    ID              reduce using rule 20 (declaration_specifier -> FLOAT pointer .)
    *               shift and go to state 20


state 14

    (71) pointer -> * .

    *               reduce using rule 71 (pointer -> * .)
    ID              reduce using rule 71 (pointer -> * .)


state 15

    (18) declaration_specifier -> INT pointer .
    (72) pointer -> pointer . *

    ID              reduce using rule 18 (declaration_specifier -> INT pointer .)
    *               shift and go to state 20


state 16

    (19) declaration_specifier -> CHAR pointer .
    (72) pointer -> pointer . *

    ID              reduce using rule 19 (declaration_specifier -> CHAR pointer .)
    *               shift and go to state 20


state 17

    (5) fun_def -> declaration_specifier ID ( . ) compound_statement
    (6) fun_def -> declaration_specifier ID ( . declaration_list ) compound_statement
    (50) declaration_list -> . declaration
    (51) declaration_list -> . declaration_list , declaration
    (30) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (31) declaration -> . declaration_specifier ID [ NUMBER ]
    (32) declaration -> . declaration_specifier ID [ FLOAT ] = { expression_list }
    (33) declaration -> . declaration_specifier ID [ FLOAT ]
    (34) declaration -> . declaration_specifier ID = expression
    (35) declaration -> . declaration_specifier ID
    (14) declaration_specifier -> . VOID
    (15) declaration_specifier -> . INT
    (16) declaration_specifier -> . CHAR
    (17) declaration_specifier -> . FLOAT
    (18) declaration_specifier -> . INT pointer
    (19) declaration_specifier -> . CHAR pointer
    (20) declaration_specifier -> . FLOAT pointer

    )               shift and go to state 22
    VOID            shift and go to state 7
    INT             shift and go to state 8
    CHAR            shift and go to state 9
    FLOAT           shift and go to state 6

    declaration_specifier          shift and go to state 21
    declaration_list               shift and go to state 23
    declaration                    shift and go to state 24

state 18

    (30) declaration -> declaration_specifier ID [ . NUMBER ] = { expression_list }
    (31) declaration -> declaration_specifier ID [ . NUMBER ]
    (32) declaration -> declaration_specifier ID [ . FLOAT ] = { expression_list }
    (33) declaration -> declaration_specifier ID [ . FLOAT ]

    NUMBER          shift and go to state 25
    FLOAT           shift and go to state 26


state 19

    (34) declaration -> declaration_specifier ID = . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 28
    eq_exp                         shift and go to state 41

state 20

    (72) pointer -> pointer * .

    *               reduce using rule 72 (pointer -> pointer * .)
    ID              reduce using rule 72 (pointer -> pointer * .)


state 21

    (30) declaration -> declaration_specifier . ID [ NUMBER ] = { expression_list }
    (31) declaration -> declaration_specifier . ID [ NUMBER ]
    (32) declaration -> declaration_specifier . ID [ FLOAT ] = { expression_list }
    (33) declaration -> declaration_specifier . ID [ FLOAT ]
    (34) declaration -> declaration_specifier . ID = expression
    (35) declaration -> declaration_specifier . ID

    ID              shift and go to state 42


state 22

    (5) fun_def -> declaration_specifier ID ( ) . compound_statement
    (83) compound_statement -> . { statement_list }
    (84) compound_statement -> . { }

    {               shift and go to state 44

    compound_statement             shift and go to state 43

state 23

    (6) fun_def -> declaration_specifier ID ( declaration_list . ) compound_statement
    (51) declaration_list -> declaration_list . , declaration

    )               shift and go to state 45
    ,               shift and go to state 46


state 24

    (50) declaration_list -> declaration .

    )               reduce using rule 50 (declaration_list -> declaration .)
    ,               reduce using rule 50 (declaration_list -> declaration .)


state 25

    (30) declaration -> declaration_specifier ID [ NUMBER . ] = { expression_list }
    (31) declaration -> declaration_specifier ID [ NUMBER . ]

    ]               shift and go to state 47


state 26

    (32) declaration -> declaration_specifier ID [ FLOAT . ] = { expression_list }
    (33) declaration -> declaration_specifier ID [ FLOAT . ]

    ]               shift and go to state 48


state 27

    (10) expression -> ID . ( )
    (11) expression -> ID . ( expression_list )
    (37) expression -> ID . MINUSMINUS
    (39) expression -> ID . PLUSPLUS
    (40) expression -> ID . XOREQUAL expression
    (41) expression -> ID . ANDEQUAL expression
    (42) expression -> ID . OREQUAL expression
    (43) expression -> ID . TIMESEQUAL expression
    (44) expression -> ID . DIVEQUAL expression
    (45) expression -> ID . PLUSEQUAL expression
    (46) expression -> ID . MINUSEQUAL expression
    (47) expression -> ID . = expression
    (62) expression -> ID . [ expression ]
    (63) expression -> ID . [ expression ] = expression
    (66) expression -> ID .

    (               shift and go to state 49
    MINUSMINUS      shift and go to state 50
    PLUSPLUS        shift and go to state 51
    XOREQUAL        shift and go to state 52
    ANDEQUAL        shift and go to state 53
    OREQUAL         shift and go to state 54
    TIMESEQUAL      shift and go to state 55
    DIVEQUAL        shift and go to state 56
    PLUSEQUAL       shift and go to state 57
    MINUSEQUAL      shift and go to state 58
    =               shift and go to state 59
    [               shift and go to state 60
    +               reduce using rule 66 (expression -> ID .)
    -               reduce using rule 66 (expression -> ID .)
    *               reduce using rule 66 (expression -> ID .)
    /               reduce using rule 66 (expression -> ID .)
    &               reduce using rule 66 (expression -> ID .)
    |               reduce using rule 66 (expression -> ID .)
    ^               reduce using rule 66 (expression -> ID .)
    EQ              reduce using rule 66 (expression -> ID .)
    NE              reduce using rule 66 (expression -> ID .)
    LOR             reduce using rule 66 (expression -> ID .)
    LAND            reduce using rule 66 (expression -> ID .)
    <               reduce using rule 66 (expression -> ID .)
    >               reduce using rule 66 (expression -> ID .)
    GE              reduce using rule 66 (expression -> ID .)
    LE              reduce using rule 66 (expression -> ID .)
    ;               reduce using rule 66 (expression -> ID .)
    )               reduce using rule 66 (expression -> ID .)
    ,               reduce using rule 66 (expression -> ID .)
    ]               reduce using rule 66 (expression -> ID .)
    }               reduce using rule 66 (expression -> ID .)


state 28

    (34) declaration -> declaration_specifier ID = expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    ;               reduce using rule 34 (declaration -> declaration_specifier ID = expression .)
    )               reduce using rule 34 (declaration -> declaration_specifier ID = expression .)
    ,               reduce using rule 34 (declaration -> declaration_specifier ID = expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75


state 29

    (61) expression -> ( . expression )
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 76
    eq_exp                         shift and go to state 41

state 30

    (12) expression -> ASM . ( S_CONST )

    (               shift and go to state 77


state 31

    (13) expression -> PRINTSTR . ( S_CONST )

    (               shift and go to state 78


state 32

    (36) expression -> MINUSMINUS . ID

    ID              shift and go to state 79


state 33

    (38) expression -> PLUSPLUS . ID

    ID              shift and go to state 80


state 34

    (60) expression -> - . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 81
    eq_exp                         shift and go to state 41

state 35

    (69) expression -> * . ID = expression
    (70) expression -> * . ID

    ID              shift and go to state 82


state 36

    (67) expression -> & . ID
    (68) expression -> & . ID [ expression ]

    ID              shift and go to state 83


state 37

    (59) expression -> ~ . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 84
    eq_exp                         shift and go to state 41

state 38

    (64) expression -> NUMBER .

    +               reduce using rule 64 (expression -> NUMBER .)
    -               reduce using rule 64 (expression -> NUMBER .)
    *               reduce using rule 64 (expression -> NUMBER .)
    /               reduce using rule 64 (expression -> NUMBER .)
    &               reduce using rule 64 (expression -> NUMBER .)
    |               reduce using rule 64 (expression -> NUMBER .)
    ^               reduce using rule 64 (expression -> NUMBER .)
    EQ              reduce using rule 64 (expression -> NUMBER .)
    NE              reduce using rule 64 (expression -> NUMBER .)
    LOR             reduce using rule 64 (expression -> NUMBER .)
    LAND            reduce using rule 64 (expression -> NUMBER .)
    <               reduce using rule 64 (expression -> NUMBER .)
    >               reduce using rule 64 (expression -> NUMBER .)
    GE              reduce using rule 64 (expression -> NUMBER .)
    LE              reduce using rule 64 (expression -> NUMBER .)
    ;               reduce using rule 64 (expression -> NUMBER .)
    )               reduce using rule 64 (expression -> NUMBER .)
    ,               reduce using rule 64 (expression -> NUMBER .)
    ]               reduce using rule 64 (expression -> NUMBER .)
    }               reduce using rule 64 (expression -> NUMBER .)


state 39

    (65) expression -> FLOAT .

    +               reduce using rule 65 (expression -> FLOAT .)
    -               reduce using rule 65 (expression -> FLOAT .)
    *               reduce using rule 65 (expression -> FLOAT .)
    /               reduce using rule 65 (expression -> FLOAT .)
    &               reduce using rule 65 (expression -> FLOAT .)
    |               reduce using rule 65 (expression -> FLOAT .)
    ^               reduce using rule 65 (expression -> FLOAT .)
    EQ              reduce using rule 65 (expression -> FLOAT .)
    NE              reduce using rule 65 (expression -> FLOAT .)
    LOR             reduce using rule 65 (expression -> FLOAT .)
    LAND            reduce using rule 65 (expression -> FLOAT .)
    <               reduce using rule 65 (expression -> FLOAT .)
    >               reduce using rule 65 (expression -> FLOAT .)
    GE              reduce using rule 65 (expression -> FLOAT .)
    LE              reduce using rule 65 (expression -> FLOAT .)
    ;               reduce using rule 65 (expression -> FLOAT .)
    )               reduce using rule 65 (expression -> FLOAT .)
    ,               reduce using rule 65 (expression -> FLOAT .)
    ]               reduce using rule 65 (expression -> FLOAT .)
    }               reduce using rule 65 (expression -> FLOAT .)


state 40

    (73) expression -> C_CONST .

    +               reduce using rule 73 (expression -> C_CONST .)
    -               reduce using rule 73 (expression -> C_CONST .)
    *               reduce using rule 73 (expression -> C_CONST .)
    /               reduce using rule 73 (expression -> C_CONST .)
    &               reduce using rule 73 (expression -> C_CONST .)
    |               reduce using rule 73 (expression -> C_CONST .)
    ^               reduce using rule 73 (expression -> C_CONST .)
    EQ              reduce using rule 73 (expression -> C_CONST .)
    NE              reduce using rule 73 (expression -> C_CONST .)
    LOR             reduce using rule 73 (expression -> C_CONST .)
    LAND            reduce using rule 73 (expression -> C_CONST .)
    <               reduce using rule 73 (expression -> C_CONST .)
    >               reduce using rule 73 (expression -> C_CONST .)
    GE              reduce using rule 73 (expression -> C_CONST .)
    LE              reduce using rule 73 (expression -> C_CONST .)
    ;               reduce using rule 73 (expression -> C_CONST .)
    )               reduce using rule 73 (expression -> C_CONST .)
    ,               reduce using rule 73 (expression -> C_CONST .)
    ]               reduce using rule 73 (expression -> C_CONST .)
    }               reduce using rule 73 (expression -> C_CONST .)


state 41

    (74) expression -> eq_exp .

    +               reduce using rule 74 (expression -> eq_exp .)
    -               reduce using rule 74 (expression -> eq_exp .)
    *               reduce using rule 74 (expression -> eq_exp .)
    /               reduce using rule 74 (expression -> eq_exp .)
    &               reduce using rule 74 (expression -> eq_exp .)
    |               reduce using rule 74 (expression -> eq_exp .)
    ^               reduce using rule 74 (expression -> eq_exp .)
    EQ              reduce using rule 74 (expression -> eq_exp .)
    NE              reduce using rule 74 (expression -> eq_exp .)
    LOR             reduce using rule 74 (expression -> eq_exp .)
    LAND            reduce using rule 74 (expression -> eq_exp .)
    <               reduce using rule 74 (expression -> eq_exp .)
    >               reduce using rule 74 (expression -> eq_exp .)
    GE              reduce using rule 74 (expression -> eq_exp .)
    LE              reduce using rule 74 (expression -> eq_exp .)
    ;               reduce using rule 74 (expression -> eq_exp .)
    )               reduce using rule 74 (expression -> eq_exp .)
    ,               reduce using rule 74 (expression -> eq_exp .)
    ]               reduce using rule 74 (expression -> eq_exp .)
    }               reduce using rule 74 (expression -> eq_exp .)


state 42

    (30) declaration -> declaration_specifier ID . [ NUMBER ] = { expression_list }
    (31) declaration -> declaration_specifier ID . [ NUMBER ]
    (32) declaration -> declaration_specifier ID . [ FLOAT ] = { expression_list }
    (33) declaration -> declaration_specifier ID . [ FLOAT ]
    (34) declaration -> declaration_specifier ID . = expression
    (35) declaration -> declaration_specifier ID .

    [               shift and go to state 18
    =               shift and go to state 19
    )               reduce using rule 35 (declaration -> declaration_specifier ID .)
    ,               reduce using rule 35 (declaration -> declaration_specifier ID .)
    ;               reduce using rule 35 (declaration -> declaration_specifier ID .)


state 43

    (5) fun_def -> declaration_specifier ID ( ) compound_statement .

    VOID            reduce using rule 5 (fun_def -> declaration_specifier ID ( ) compound_statement .)
    INT             reduce using rule 5 (fun_def -> declaration_specifier ID ( ) compound_statement .)
    CHAR            reduce using rule 5 (fun_def -> declaration_specifier ID ( ) compound_statement .)
    FLOAT           reduce using rule 5 (fun_def -> declaration_specifier ID ( ) compound_statement .)
    $end            reduce using rule 5 (fun_def -> declaration_specifier ID ( ) compound_statement .)


state 44

    (83) compound_statement -> { . statement_list }
    (84) compound_statement -> { . }
    (85) statement_list -> . statement
    (86) statement_list -> . statement_list statement
    (7) statement -> . expression ;
    (8) statement -> . declaration ;
    (9) statement -> . compound_statement
    (21) statement -> . RETURN expression ;
    (22) statement -> . RETURN ;
    (23) statement -> . BREAK ;
    (24) statement -> . CONTINUE ;
    (25) statement -> . WHILE ( expression ) statement
    (26) statement -> . DO statement WHILE ( expression ) ;
    (27) statement -> . FOR ( expression ; expression ; expression ) statement
    (28) statement -> . IF ( expression ) statement
    (29) statement -> . IF ( expression ) statement ELSE statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (30) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (31) declaration -> . declaration_specifier ID [ NUMBER ]
    (32) declaration -> . declaration_specifier ID [ FLOAT ] = { expression_list }
    (33) declaration -> . declaration_specifier ID [ FLOAT ]
    (34) declaration -> . declaration_specifier ID = expression
    (35) declaration -> . declaration_specifier ID
    (83) compound_statement -> . { statement_list }
    (84) compound_statement -> . { }
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression
    (14) declaration_specifier -> . VOID
    (15) declaration_specifier -> . INT
    (16) declaration_specifier -> . CHAR
    (17) declaration_specifier -> . FLOAT
    (18) declaration_specifier -> . INT pointer
    (19) declaration_specifier -> . CHAR pointer
    (20) declaration_specifier -> . FLOAT pointer

    }               shift and go to state 86
    RETURN          shift and go to state 91
    BREAK           shift and go to state 92
    CONTINUE        shift and go to state 93
    WHILE           shift and go to state 94
    DO              shift and go to state 95
    FOR             shift and go to state 96
    IF              shift and go to state 97
    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 98
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40
    {               shift and go to state 44
    VOID            shift and go to state 7
    INT             shift and go to state 8
    CHAR            shift and go to state 9

    statement_list                 shift and go to state 85
    statement                      shift and go to state 87
    expression                     shift and go to state 88
    declaration                    shift and go to state 89
    compound_statement             shift and go to state 90
    eq_exp                         shift and go to state 41
    declaration_specifier          shift and go to state 21

state 45

    (6) fun_def -> declaration_specifier ID ( declaration_list ) . compound_statement
    (83) compound_statement -> . { statement_list }
    (84) compound_statement -> . { }

    {               shift and go to state 44

    compound_statement             shift and go to state 99

state 46

    (51) declaration_list -> declaration_list , . declaration
    (30) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (31) declaration -> . declaration_specifier ID [ NUMBER ]
    (32) declaration -> . declaration_specifier ID [ FLOAT ] = { expression_list }
    (33) declaration -> . declaration_specifier ID [ FLOAT ]
    (34) declaration -> . declaration_specifier ID = expression
    (35) declaration -> . declaration_specifier ID
    (14) declaration_specifier -> . VOID
    (15) declaration_specifier -> . INT
    (16) declaration_specifier -> . CHAR
    (17) declaration_specifier -> . FLOAT
    (18) declaration_specifier -> . INT pointer
    (19) declaration_specifier -> . CHAR pointer
    (20) declaration_specifier -> . FLOAT pointer

    VOID            shift and go to state 7
    INT             shift and go to state 8
    CHAR            shift and go to state 9
    FLOAT           shift and go to state 6

    declaration                    shift and go to state 100
    declaration_specifier          shift and go to state 21

state 47

    (30) declaration -> declaration_specifier ID [ NUMBER ] . = { expression_list }
    (31) declaration -> declaration_specifier ID [ NUMBER ] .

    =               shift and go to state 101
    ;               reduce using rule 31 (declaration -> declaration_specifier ID [ NUMBER ] .)
    )               reduce using rule 31 (declaration -> declaration_specifier ID [ NUMBER ] .)
    ,               reduce using rule 31 (declaration -> declaration_specifier ID [ NUMBER ] .)


state 48

    (32) declaration -> declaration_specifier ID [ FLOAT ] . = { expression_list }
    (33) declaration -> declaration_specifier ID [ FLOAT ] .

    =               shift and go to state 102
    ;               reduce using rule 33 (declaration -> declaration_specifier ID [ FLOAT ] .)
    )               reduce using rule 33 (declaration -> declaration_specifier ID [ FLOAT ] .)
    ,               reduce using rule 33 (declaration -> declaration_specifier ID [ FLOAT ] .)


state 49

    (10) expression -> ID ( . )
    (11) expression -> ID ( . expression_list )
    (48) expression_list -> . expression
    (49) expression_list -> . expression_list , expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    )               shift and go to state 103
    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression_list                shift and go to state 104
    expression                     shift and go to state 105
    eq_exp                         shift and go to state 41

state 50

    (37) expression -> ID MINUSMINUS .

    +               reduce using rule 37 (expression -> ID MINUSMINUS .)
    -               reduce using rule 37 (expression -> ID MINUSMINUS .)
    *               reduce using rule 37 (expression -> ID MINUSMINUS .)
    /               reduce using rule 37 (expression -> ID MINUSMINUS .)
    &               reduce using rule 37 (expression -> ID MINUSMINUS .)
    |               reduce using rule 37 (expression -> ID MINUSMINUS .)
    ^               reduce using rule 37 (expression -> ID MINUSMINUS .)
    EQ              reduce using rule 37 (expression -> ID MINUSMINUS .)
    NE              reduce using rule 37 (expression -> ID MINUSMINUS .)
    LOR             reduce using rule 37 (expression -> ID MINUSMINUS .)
    LAND            reduce using rule 37 (expression -> ID MINUSMINUS .)
    <               reduce using rule 37 (expression -> ID MINUSMINUS .)
    >               reduce using rule 37 (expression -> ID MINUSMINUS .)
    GE              reduce using rule 37 (expression -> ID MINUSMINUS .)
    LE              reduce using rule 37 (expression -> ID MINUSMINUS .)
    ;               reduce using rule 37 (expression -> ID MINUSMINUS .)
    )               reduce using rule 37 (expression -> ID MINUSMINUS .)
    ,               reduce using rule 37 (expression -> ID MINUSMINUS .)
    ]               reduce using rule 37 (expression -> ID MINUSMINUS .)
    }               reduce using rule 37 (expression -> ID MINUSMINUS .)


state 51

    (39) expression -> ID PLUSPLUS .

    +               reduce using rule 39 (expression -> ID PLUSPLUS .)
    -               reduce using rule 39 (expression -> ID PLUSPLUS .)
    *               reduce using rule 39 (expression -> ID PLUSPLUS .)
    /               reduce using rule 39 (expression -> ID PLUSPLUS .)
    &               reduce using rule 39 (expression -> ID PLUSPLUS .)
    |               reduce using rule 39 (expression -> ID PLUSPLUS .)
    ^               reduce using rule 39 (expression -> ID PLUSPLUS .)
    EQ              reduce using rule 39 (expression -> ID PLUSPLUS .)
    NE              reduce using rule 39 (expression -> ID PLUSPLUS .)
    LOR             reduce using rule 39 (expression -> ID PLUSPLUS .)
    LAND            reduce using rule 39 (expression -> ID PLUSPLUS .)
    <               reduce using rule 39 (expression -> ID PLUSPLUS .)
    >               reduce using rule 39 (expression -> ID PLUSPLUS .)
    GE              reduce using rule 39 (expression -> ID PLUSPLUS .)
    LE              reduce using rule 39 (expression -> ID PLUSPLUS .)
    ;               reduce using rule 39 (expression -> ID PLUSPLUS .)
    )               reduce using rule 39 (expression -> ID PLUSPLUS .)
    ,               reduce using rule 39 (expression -> ID PLUSPLUS .)
    ]               reduce using rule 39 (expression -> ID PLUSPLUS .)
    }               reduce using rule 39 (expression -> ID PLUSPLUS .)


state 52

    (40) expression -> ID XOREQUAL . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 106
    eq_exp                         shift and go to state 41

state 53

    (41) expression -> ID ANDEQUAL . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 107
    eq_exp                         shift and go to state 41

state 54

    (42) expression -> ID OREQUAL . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 108
    eq_exp                         shift and go to state 41

state 55

    (43) expression -> ID TIMESEQUAL . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 109
    eq_exp                         shift and go to state 41

state 56

    (44) expression -> ID DIVEQUAL . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 110
    eq_exp                         shift and go to state 41

state 57

    (45) expression -> ID PLUSEQUAL . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 111
    eq_exp                         shift and go to state 41

state 58

    (46) expression -> ID MINUSEQUAL . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 112
    eq_exp                         shift and go to state 41

state 59

    (47) expression -> ID = . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 113
    eq_exp                         shift and go to state 41

state 60

    (62) expression -> ID [ . expression ]
    (63) expression -> ID [ . expression ] = expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 114
    eq_exp                         shift and go to state 41

state 61

    (52) expression -> expression + . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 115
    eq_exp                         shift and go to state 41

state 62

    (53) expression -> expression - . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 116
    eq_exp                         shift and go to state 41

state 63

    (54) expression -> expression * . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 117
    eq_exp                         shift and go to state 41

state 64

    (55) expression -> expression / . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 118
    eq_exp                         shift and go to state 41

state 65

    (56) expression -> expression & . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 119
    eq_exp                         shift and go to state 41

state 66

    (57) expression -> expression | . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 120
    eq_exp                         shift and go to state 41

state 67

    (58) expression -> expression ^ . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 121
    eq_exp                         shift and go to state 41

state 68

    (75) eq_exp -> expression EQ . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 122
    eq_exp                         shift and go to state 41

state 69

    (76) eq_exp -> expression NE . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 123
    eq_exp                         shift and go to state 41

state 70

    (77) eq_exp -> expression LOR . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 124
    eq_exp                         shift and go to state 41

state 71

    (78) eq_exp -> expression LAND . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 125
    eq_exp                         shift and go to state 41

state 72

    (79) eq_exp -> expression < . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 126
    eq_exp                         shift and go to state 41

state 73

    (80) eq_exp -> expression > . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 127
    eq_exp                         shift and go to state 41

state 74

    (81) eq_exp -> expression GE . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 128
    eq_exp                         shift and go to state 41

state 75

    (82) eq_exp -> expression LE . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 129
    eq_exp                         shift and go to state 41

state 76

    (61) expression -> ( expression . )
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    )               shift and go to state 130
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75


state 77

    (12) expression -> ASM ( . S_CONST )

    S_CONST         shift and go to state 131


state 78

    (13) expression -> PRINTSTR ( . S_CONST )

    S_CONST         shift and go to state 132


state 79

    (36) expression -> MINUSMINUS ID .

    +               reduce using rule 36 (expression -> MINUSMINUS ID .)
    -               reduce using rule 36 (expression -> MINUSMINUS ID .)
    *               reduce using rule 36 (expression -> MINUSMINUS ID .)
    /               reduce using rule 36 (expression -> MINUSMINUS ID .)
    &               reduce using rule 36 (expression -> MINUSMINUS ID .)
    |               reduce using rule 36 (expression -> MINUSMINUS ID .)
    ^               reduce using rule 36 (expression -> MINUSMINUS ID .)
    EQ              reduce using rule 36 (expression -> MINUSMINUS ID .)
    NE              reduce using rule 36 (expression -> MINUSMINUS ID .)
    LOR             reduce using rule 36 (expression -> MINUSMINUS ID .)
    LAND            reduce using rule 36 (expression -> MINUSMINUS ID .)
    <               reduce using rule 36 (expression -> MINUSMINUS ID .)
    >               reduce using rule 36 (expression -> MINUSMINUS ID .)
    GE              reduce using rule 36 (expression -> MINUSMINUS ID .)
    LE              reduce using rule 36 (expression -> MINUSMINUS ID .)
    ;               reduce using rule 36 (expression -> MINUSMINUS ID .)
    )               reduce using rule 36 (expression -> MINUSMINUS ID .)
    ,               reduce using rule 36 (expression -> MINUSMINUS ID .)
    ]               reduce using rule 36 (expression -> MINUSMINUS ID .)
    }               reduce using rule 36 (expression -> MINUSMINUS ID .)


state 80

    (38) expression -> PLUSPLUS ID .

    +               reduce using rule 38 (expression -> PLUSPLUS ID .)
    -               reduce using rule 38 (expression -> PLUSPLUS ID .)
    *               reduce using rule 38 (expression -> PLUSPLUS ID .)
    /               reduce using rule 38 (expression -> PLUSPLUS ID .)
    &               reduce using rule 38 (expression -> PLUSPLUS ID .)
    |               reduce using rule 38 (expression -> PLUSPLUS ID .)
    ^               reduce using rule 38 (expression -> PLUSPLUS ID .)
    EQ              reduce using rule 38 (expression -> PLUSPLUS ID .)
    NE              reduce using rule 38 (expression -> PLUSPLUS ID .)
    LOR             reduce using rule 38 (expression -> PLUSPLUS ID .)
    LAND            reduce using rule 38 (expression -> PLUSPLUS ID .)
    <               reduce using rule 38 (expression -> PLUSPLUS ID .)
    >               reduce using rule 38 (expression -> PLUSPLUS ID .)
    GE              reduce using rule 38 (expression -> PLUSPLUS ID .)
    LE              reduce using rule 38 (expression -> PLUSPLUS ID .)
    ;               reduce using rule 38 (expression -> PLUSPLUS ID .)
    )               reduce using rule 38 (expression -> PLUSPLUS ID .)
    ,               reduce using rule 38 (expression -> PLUSPLUS ID .)
    ]               reduce using rule 38 (expression -> PLUSPLUS ID .)
    }               reduce using rule 38 (expression -> PLUSPLUS ID .)


state 81

    (60) expression -> - expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    +               reduce using rule 60 (expression -> - expression .)
    -               reduce using rule 60 (expression -> - expression .)
    *               reduce using rule 60 (expression -> - expression .)
    /               reduce using rule 60 (expression -> - expression .)
    &               reduce using rule 60 (expression -> - expression .)
    |               reduce using rule 60 (expression -> - expression .)
    ^               reduce using rule 60 (expression -> - expression .)
    EQ              reduce using rule 60 (expression -> - expression .)
    NE              reduce using rule 60 (expression -> - expression .)
    LOR             reduce using rule 60 (expression -> - expression .)
    LAND            reduce using rule 60 (expression -> - expression .)
    <               reduce using rule 60 (expression -> - expression .)
    >               reduce using rule 60 (expression -> - expression .)
    GE              reduce using rule 60 (expression -> - expression .)
    LE              reduce using rule 60 (expression -> - expression .)
    ;               reduce using rule 60 (expression -> - expression .)
    )               reduce using rule 60 (expression -> - expression .)
    ,               reduce using rule 60 (expression -> - expression .)
    ]               reduce using rule 60 (expression -> - expression .)
    }               reduce using rule 60 (expression -> - expression .)

  ! +               [ shift and go to state 61 ]
  ! -               [ shift and go to state 62 ]
  ! *               [ shift and go to state 63 ]
  ! /               [ shift and go to state 64 ]
  ! &               [ shift and go to state 65 ]
  ! |               [ shift and go to state 66 ]
  ! ^               [ shift and go to state 67 ]
  ! EQ              [ shift and go to state 68 ]
  ! NE              [ shift and go to state 69 ]
  ! LOR             [ shift and go to state 70 ]
  ! LAND            [ shift and go to state 71 ]
  ! <               [ shift and go to state 72 ]
  ! >               [ shift and go to state 73 ]
  ! GE              [ shift and go to state 74 ]
  ! LE              [ shift and go to state 75 ]


state 82

    (69) expression -> * ID . = expression
    (70) expression -> * ID .

    =               shift and go to state 133
    +               reduce using rule 70 (expression -> * ID .)
    -               reduce using rule 70 (expression -> * ID .)
    *               reduce using rule 70 (expression -> * ID .)
    /               reduce using rule 70 (expression -> * ID .)
    &               reduce using rule 70 (expression -> * ID .)
    |               reduce using rule 70 (expression -> * ID .)
    ^               reduce using rule 70 (expression -> * ID .)
    EQ              reduce using rule 70 (expression -> * ID .)
    NE              reduce using rule 70 (expression -> * ID .)
    LOR             reduce using rule 70 (expression -> * ID .)
    LAND            reduce using rule 70 (expression -> * ID .)
    <               reduce using rule 70 (expression -> * ID .)
    >               reduce using rule 70 (expression -> * ID .)
    GE              reduce using rule 70 (expression -> * ID .)
    LE              reduce using rule 70 (expression -> * ID .)
    ;               reduce using rule 70 (expression -> * ID .)
    )               reduce using rule 70 (expression -> * ID .)
    ,               reduce using rule 70 (expression -> * ID .)
    ]               reduce using rule 70 (expression -> * ID .)
    }               reduce using rule 70 (expression -> * ID .)


state 83

    (67) expression -> & ID .
    (68) expression -> & ID . [ expression ]

    +               reduce using rule 67 (expression -> & ID .)
    -               reduce using rule 67 (expression -> & ID .)
    *               reduce using rule 67 (expression -> & ID .)
    /               reduce using rule 67 (expression -> & ID .)
    &               reduce using rule 67 (expression -> & ID .)
    |               reduce using rule 67 (expression -> & ID .)
    ^               reduce using rule 67 (expression -> & ID .)
    EQ              reduce using rule 67 (expression -> & ID .)
    NE              reduce using rule 67 (expression -> & ID .)
    LOR             reduce using rule 67 (expression -> & ID .)
    LAND            reduce using rule 67 (expression -> & ID .)
    <               reduce using rule 67 (expression -> & ID .)
    >               reduce using rule 67 (expression -> & ID .)
    GE              reduce using rule 67 (expression -> & ID .)
    LE              reduce using rule 67 (expression -> & ID .)
    ;               reduce using rule 67 (expression -> & ID .)
    )               reduce using rule 67 (expression -> & ID .)
    ,               reduce using rule 67 (expression -> & ID .)
    ]               reduce using rule 67 (expression -> & ID .)
    }               reduce using rule 67 (expression -> & ID .)
    [               shift and go to state 134


state 84

    (59) expression -> ~ expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    +               reduce using rule 59 (expression -> ~ expression .)
    -               reduce using rule 59 (expression -> ~ expression .)
    *               reduce using rule 59 (expression -> ~ expression .)
    /               reduce using rule 59 (expression -> ~ expression .)
    &               reduce using rule 59 (expression -> ~ expression .)
    |               reduce using rule 59 (expression -> ~ expression .)
    ^               reduce using rule 59 (expression -> ~ expression .)
    EQ              reduce using rule 59 (expression -> ~ expression .)
    NE              reduce using rule 59 (expression -> ~ expression .)
    LOR             reduce using rule 59 (expression -> ~ expression .)
    LAND            reduce using rule 59 (expression -> ~ expression .)
    <               reduce using rule 59 (expression -> ~ expression .)
    >               reduce using rule 59 (expression -> ~ expression .)
    GE              reduce using rule 59 (expression -> ~ expression .)
    LE              reduce using rule 59 (expression -> ~ expression .)
    ;               reduce using rule 59 (expression -> ~ expression .)
    )               reduce using rule 59 (expression -> ~ expression .)
    ,               reduce using rule 59 (expression -> ~ expression .)
    ]               reduce using rule 59 (expression -> ~ expression .)
    }               reduce using rule 59 (expression -> ~ expression .)

  ! +               [ shift and go to state 61 ]
  ! -               [ shift and go to state 62 ]
  ! *               [ shift and go to state 63 ]
  ! /               [ shift and go to state 64 ]
  ! &               [ shift and go to state 65 ]
  ! |               [ shift and go to state 66 ]
  ! ^               [ shift and go to state 67 ]
  ! EQ              [ shift and go to state 68 ]
  ! NE              [ shift and go to state 69 ]
  ! LOR             [ shift and go to state 70 ]
  ! LAND            [ shift and go to state 71 ]
  ! <               [ shift and go to state 72 ]
  ! >               [ shift and go to state 73 ]
  ! GE              [ shift and go to state 74 ]
  ! LE              [ shift and go to state 75 ]


state 85

    (83) compound_statement -> { statement_list . }
    (86) statement_list -> statement_list . statement
    (7) statement -> . expression ;
    (8) statement -> . declaration ;
    (9) statement -> . compound_statement
    (21) statement -> . RETURN expression ;
    (22) statement -> . RETURN ;
    (23) statement -> . BREAK ;
    (24) statement -> . CONTINUE ;
    (25) statement -> . WHILE ( expression ) statement
    (26) statement -> . DO statement WHILE ( expression ) ;
    (27) statement -> . FOR ( expression ; expression ; expression ) statement
    (28) statement -> . IF ( expression ) statement
    (29) statement -> . IF ( expression ) statement ELSE statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (30) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (31) declaration -> . declaration_specifier ID [ NUMBER ]
    (32) declaration -> . declaration_specifier ID [ FLOAT ] = { expression_list }
    (33) declaration -> . declaration_specifier ID [ FLOAT ]
    (34) declaration -> . declaration_specifier ID = expression
    (35) declaration -> . declaration_specifier ID
    (83) compound_statement -> . { statement_list }
    (84) compound_statement -> . { }
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression
    (14) declaration_specifier -> . VOID
    (15) declaration_specifier -> . INT
    (16) declaration_specifier -> . CHAR
    (17) declaration_specifier -> . FLOAT
    (18) declaration_specifier -> . INT pointer
    (19) declaration_specifier -> . CHAR pointer
    (20) declaration_specifier -> . FLOAT pointer

    }               shift and go to state 135
    RETURN          shift and go to state 91
    BREAK           shift and go to state 92
    CONTINUE        shift and go to state 93
    WHILE           shift and go to state 94
    DO              shift and go to state 95
    FOR             shift and go to state 96
    IF              shift and go to state 97
    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 98
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40
    {               shift and go to state 44
    VOID            shift and go to state 7
    INT             shift and go to state 8
    CHAR            shift and go to state 9

    statement                      shift and go to state 136
    expression                     shift and go to state 88
    declaration                    shift and go to state 89
    compound_statement             shift and go to state 90
    eq_exp                         shift and go to state 41
    declaration_specifier          shift and go to state 21

state 86

    (84) compound_statement -> { } .

    VOID            reduce using rule 84 (compound_statement -> { } .)
    INT             reduce using rule 84 (compound_statement -> { } .)
    CHAR            reduce using rule 84 (compound_statement -> { } .)
    FLOAT           reduce using rule 84 (compound_statement -> { } .)
    $end            reduce using rule 84 (compound_statement -> { } .)
    }               reduce using rule 84 (compound_statement -> { } .)
    RETURN          reduce using rule 84 (compound_statement -> { } .)
    BREAK           reduce using rule 84 (compound_statement -> { } .)
    CONTINUE        reduce using rule 84 (compound_statement -> { } .)
    WHILE           reduce using rule 84 (compound_statement -> { } .)
    DO              reduce using rule 84 (compound_statement -> { } .)
    FOR             reduce using rule 84 (compound_statement -> { } .)
    IF              reduce using rule 84 (compound_statement -> { } .)
    ID              reduce using rule 84 (compound_statement -> { } .)
    ASM             reduce using rule 84 (compound_statement -> { } .)
    PRINTSTR        reduce using rule 84 (compound_statement -> { } .)
    MINUSMINUS      reduce using rule 84 (compound_statement -> { } .)
    PLUSPLUS        reduce using rule 84 (compound_statement -> { } .)
    ~               reduce using rule 84 (compound_statement -> { } .)
    -               reduce using rule 84 (compound_statement -> { } .)
    (               reduce using rule 84 (compound_statement -> { } .)
    NUMBER          reduce using rule 84 (compound_statement -> { } .)
    &               reduce using rule 84 (compound_statement -> { } .)
    *               reduce using rule 84 (compound_statement -> { } .)
    C_CONST         reduce using rule 84 (compound_statement -> { } .)
    {               reduce using rule 84 (compound_statement -> { } .)
    ELSE            reduce using rule 84 (compound_statement -> { } .)


state 87

    (85) statement_list -> statement .

    }               reduce using rule 85 (statement_list -> statement .)
    RETURN          reduce using rule 85 (statement_list -> statement .)
    BREAK           reduce using rule 85 (statement_list -> statement .)
    CONTINUE        reduce using rule 85 (statement_list -> statement .)
    WHILE           reduce using rule 85 (statement_list -> statement .)
    DO              reduce using rule 85 (statement_list -> statement .)
    FOR             reduce using rule 85 (statement_list -> statement .)
    IF              reduce using rule 85 (statement_list -> statement .)
    ID              reduce using rule 85 (statement_list -> statement .)
    ASM             reduce using rule 85 (statement_list -> statement .)
    PRINTSTR        reduce using rule 85 (statement_list -> statement .)
    MINUSMINUS      reduce using rule 85 (statement_list -> statement .)
    PLUSPLUS        reduce using rule 85 (statement_list -> statement .)
    ~               reduce using rule 85 (statement_list -> statement .)
    -               reduce using rule 85 (statement_list -> statement .)
    (               reduce using rule 85 (statement_list -> statement .)
    NUMBER          reduce using rule 85 (statement_list -> statement .)
    FLOAT           reduce using rule 85 (statement_list -> statement .)
    &               reduce using rule 85 (statement_list -> statement .)
    *               reduce using rule 85 (statement_list -> statement .)
    C_CONST         reduce using rule 85 (statement_list -> statement .)
    {               reduce using rule 85 (statement_list -> statement .)
    VOID            reduce using rule 85 (statement_list -> statement .)
    INT             reduce using rule 85 (statement_list -> statement .)
    CHAR            reduce using rule 85 (statement_list -> statement .)


state 88

    (7) statement -> expression . ;
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    ;               shift and go to state 137
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75


state 89

    (8) statement -> declaration . ;

    ;               shift and go to state 138


state 90

    (9) statement -> compound_statement .

    }               reduce using rule 9 (statement -> compound_statement .)
    RETURN          reduce using rule 9 (statement -> compound_statement .)
    BREAK           reduce using rule 9 (statement -> compound_statement .)
    CONTINUE        reduce using rule 9 (statement -> compound_statement .)
    WHILE           reduce using rule 9 (statement -> compound_statement .)
    DO              reduce using rule 9 (statement -> compound_statement .)
    FOR             reduce using rule 9 (statement -> compound_statement .)
    IF              reduce using rule 9 (statement -> compound_statement .)
    ID              reduce using rule 9 (statement -> compound_statement .)
    ASM             reduce using rule 9 (statement -> compound_statement .)
    PRINTSTR        reduce using rule 9 (statement -> compound_statement .)
    MINUSMINUS      reduce using rule 9 (statement -> compound_statement .)
    PLUSPLUS        reduce using rule 9 (statement -> compound_statement .)
    ~               reduce using rule 9 (statement -> compound_statement .)
    -               reduce using rule 9 (statement -> compound_statement .)
    (               reduce using rule 9 (statement -> compound_statement .)
    NUMBER          reduce using rule 9 (statement -> compound_statement .)
    FLOAT           reduce using rule 9 (statement -> compound_statement .)
    &               reduce using rule 9 (statement -> compound_statement .)
    *               reduce using rule 9 (statement -> compound_statement .)
    C_CONST         reduce using rule 9 (statement -> compound_statement .)
    {               reduce using rule 9 (statement -> compound_statement .)
    VOID            reduce using rule 9 (statement -> compound_statement .)
    INT             reduce using rule 9 (statement -> compound_statement .)
    CHAR            reduce using rule 9 (statement -> compound_statement .)
    ELSE            reduce using rule 9 (statement -> compound_statement .)


state 91

    (21) statement -> RETURN . expression ;
    (22) statement -> RETURN . ;
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ;               shift and go to state 140
    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 139
    eq_exp                         shift and go to state 41

state 92

    (23) statement -> BREAK . ;

    ;               shift and go to state 141


state 93

    (24) statement -> CONTINUE . ;

    ;               shift and go to state 142


state 94

    (25) statement -> WHILE . ( expression ) statement

    (               shift and go to state 143


state 95

    (26) statement -> DO . statement WHILE ( expression ) ;
    (7) statement -> . expression ;
    (8) statement -> . declaration ;
    (9) statement -> . compound_statement
    (21) statement -> . RETURN expression ;
    (22) statement -> . RETURN ;
    (23) statement -> . BREAK ;
    (24) statement -> . CONTINUE ;
    (25) statement -> . WHILE ( expression ) statement
    (26) statement -> . DO statement WHILE ( expression ) ;
    (27) statement -> . FOR ( expression ; expression ; expression ) statement
    (28) statement -> . IF ( expression ) statement
    (29) statement -> . IF ( expression ) statement ELSE statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (30) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (31) declaration -> . declaration_specifier ID [ NUMBER ]
    (32) declaration -> . declaration_specifier ID [ FLOAT ] = { expression_list }
    (33) declaration -> . declaration_specifier ID [ FLOAT ]
    (34) declaration -> . declaration_specifier ID = expression
    (35) declaration -> . declaration_specifier ID
    (83) compound_statement -> . { statement_list }
    (84) compound_statement -> . { }
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression
    (14) declaration_specifier -> . VOID
    (15) declaration_specifier -> . INT
    (16) declaration_specifier -> . CHAR
    (17) declaration_specifier -> . FLOAT
    (18) declaration_specifier -> . INT pointer
    (19) declaration_specifier -> . CHAR pointer
    (20) declaration_specifier -> . FLOAT pointer

    RETURN          shift and go to state 91
    BREAK           shift and go to state 92
    CONTINUE        shift and go to state 93
    WHILE           shift and go to state 94
    DO              shift and go to state 95
    FOR             shift and go to state 96
    IF              shift and go to state 97
    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 98
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40
    {               shift and go to state 44
    VOID            shift and go to state 7
    INT             shift and go to state 8
    CHAR            shift and go to state 9

    statement                      shift and go to state 144
    expression                     shift and go to state 88
    declaration                    shift and go to state 89
    compound_statement             shift and go to state 90
    eq_exp                         shift and go to state 41
    declaration_specifier          shift and go to state 21

state 96

    (27) statement -> FOR . ( expression ; expression ; expression ) statement

    (               shift and go to state 145


state 97

    (28) statement -> IF . ( expression ) statement
    (29) statement -> IF . ( expression ) statement ELSE statement

    (               shift and go to state 146


state 98

    (65) expression -> FLOAT .
    (17) declaration_specifier -> FLOAT .
    (20) declaration_specifier -> FLOAT . pointer
    (71) pointer -> . *
    (72) pointer -> . pointer *

  ! shift/reduce conflict for * resolved as shift
    ;               reduce using rule 65 (expression -> FLOAT .)
    +               reduce using rule 65 (expression -> FLOAT .)
    -               reduce using rule 65 (expression -> FLOAT .)
    /               reduce using rule 65 (expression -> FLOAT .)
    &               reduce using rule 65 (expression -> FLOAT .)
    |               reduce using rule 65 (expression -> FLOAT .)
    ^               reduce using rule 65 (expression -> FLOAT .)
    EQ              reduce using rule 65 (expression -> FLOAT .)
    NE              reduce using rule 65 (expression -> FLOAT .)
    LOR             reduce using rule 65 (expression -> FLOAT .)
    LAND            reduce using rule 65 (expression -> FLOAT .)
    <               reduce using rule 65 (expression -> FLOAT .)
    >               reduce using rule 65 (expression -> FLOAT .)
    GE              reduce using rule 65 (expression -> FLOAT .)
    LE              reduce using rule 65 (expression -> FLOAT .)
    ID              reduce using rule 17 (declaration_specifier -> FLOAT .)
    *               shift and go to state 14

  ! *               [ reduce using rule 65 (expression -> FLOAT .) ]

    pointer                        shift and go to state 13

state 99

    (6) fun_def -> declaration_specifier ID ( declaration_list ) compound_statement .

    VOID            reduce using rule 6 (fun_def -> declaration_specifier ID ( declaration_list ) compound_statement .)
    INT             reduce using rule 6 (fun_def -> declaration_specifier ID ( declaration_list ) compound_statement .)
    CHAR            reduce using rule 6 (fun_def -> declaration_specifier ID ( declaration_list ) compound_statement .)
    FLOAT           reduce using rule 6 (fun_def -> declaration_specifier ID ( declaration_list ) compound_statement .)
    $end            reduce using rule 6 (fun_def -> declaration_specifier ID ( declaration_list ) compound_statement .)


state 100

    (51) declaration_list -> declaration_list , declaration .

    )               reduce using rule 51 (declaration_list -> declaration_list , declaration .)
    ,               reduce using rule 51 (declaration_list -> declaration_list , declaration .)


state 101

    (30) declaration -> declaration_specifier ID [ NUMBER ] = . { expression_list }

    {               shift and go to state 147


state 102

    (32) declaration -> declaration_specifier ID [ FLOAT ] = . { expression_list }

    {               shift and go to state 148


state 103

    (10) expression -> ID ( ) .

    +               reduce using rule 10 (expression -> ID ( ) .)
    -               reduce using rule 10 (expression -> ID ( ) .)
    *               reduce using rule 10 (expression -> ID ( ) .)
    /               reduce using rule 10 (expression -> ID ( ) .)
    &               reduce using rule 10 (expression -> ID ( ) .)
    |               reduce using rule 10 (expression -> ID ( ) .)
    ^               reduce using rule 10 (expression -> ID ( ) .)
    EQ              reduce using rule 10 (expression -> ID ( ) .)
    NE              reduce using rule 10 (expression -> ID ( ) .)
    LOR             reduce using rule 10 (expression -> ID ( ) .)
    LAND            reduce using rule 10 (expression -> ID ( ) .)
    <               reduce using rule 10 (expression -> ID ( ) .)
    >               reduce using rule 10 (expression -> ID ( ) .)
    GE              reduce using rule 10 (expression -> ID ( ) .)
    LE              reduce using rule 10 (expression -> ID ( ) .)
    ;               reduce using rule 10 (expression -> ID ( ) .)
    )               reduce using rule 10 (expression -> ID ( ) .)
    ,               reduce using rule 10 (expression -> ID ( ) .)
    ]               reduce using rule 10 (expression -> ID ( ) .)
    }               reduce using rule 10 (expression -> ID ( ) .)


state 104

    (11) expression -> ID ( expression_list . )
    (49) expression_list -> expression_list . , expression

    )               shift and go to state 149
    ,               shift and go to state 150


state 105

    (48) expression_list -> expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    )               reduce using rule 48 (expression_list -> expression .)
    ,               reduce using rule 48 (expression_list -> expression .)
    }               reduce using rule 48 (expression_list -> expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75


state 106

    (40) expression -> ID XOREQUAL expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 40 (expression -> ID XOREQUAL expression .)
    )               reduce using rule 40 (expression -> ID XOREQUAL expression .)
    ,               reduce using rule 40 (expression -> ID XOREQUAL expression .)
    ]               reduce using rule 40 (expression -> ID XOREQUAL expression .)
    }               reduce using rule 40 (expression -> ID XOREQUAL expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 40 (expression -> ID XOREQUAL expression .) ]
  ! -               [ reduce using rule 40 (expression -> ID XOREQUAL expression .) ]
  ! *               [ reduce using rule 40 (expression -> ID XOREQUAL expression .) ]
  ! /               [ reduce using rule 40 (expression -> ID XOREQUAL expression .) ]
  ! &               [ reduce using rule 40 (expression -> ID XOREQUAL expression .) ]
  ! |               [ reduce using rule 40 (expression -> ID XOREQUAL expression .) ]
  ! ^               [ reduce using rule 40 (expression -> ID XOREQUAL expression .) ]
  ! EQ              [ reduce using rule 40 (expression -> ID XOREQUAL expression .) ]
  ! NE              [ reduce using rule 40 (expression -> ID XOREQUAL expression .) ]
  ! LOR             [ reduce using rule 40 (expression -> ID XOREQUAL expression .) ]
  ! LAND            [ reduce using rule 40 (expression -> ID XOREQUAL expression .) ]
  ! <               [ reduce using rule 40 (expression -> ID XOREQUAL expression .) ]
  ! >               [ reduce using rule 40 (expression -> ID XOREQUAL expression .) ]
  ! GE              [ reduce using rule 40 (expression -> ID XOREQUAL expression .) ]
  ! LE              [ reduce using rule 40 (expression -> ID XOREQUAL expression .) ]


state 107

    (41) expression -> ID ANDEQUAL expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 41 (expression -> ID ANDEQUAL expression .)
    )               reduce using rule 41 (expression -> ID ANDEQUAL expression .)
    ,               reduce using rule 41 (expression -> ID ANDEQUAL expression .)
    ]               reduce using rule 41 (expression -> ID ANDEQUAL expression .)
    }               reduce using rule 41 (expression -> ID ANDEQUAL expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 41 (expression -> ID ANDEQUAL expression .) ]
  ! -               [ reduce using rule 41 (expression -> ID ANDEQUAL expression .) ]
  ! *               [ reduce using rule 41 (expression -> ID ANDEQUAL expression .) ]
  ! /               [ reduce using rule 41 (expression -> ID ANDEQUAL expression .) ]
  ! &               [ reduce using rule 41 (expression -> ID ANDEQUAL expression .) ]
  ! |               [ reduce using rule 41 (expression -> ID ANDEQUAL expression .) ]
  ! ^               [ reduce using rule 41 (expression -> ID ANDEQUAL expression .) ]
  ! EQ              [ reduce using rule 41 (expression -> ID ANDEQUAL expression .) ]
  ! NE              [ reduce using rule 41 (expression -> ID ANDEQUAL expression .) ]
  ! LOR             [ reduce using rule 41 (expression -> ID ANDEQUAL expression .) ]
  ! LAND            [ reduce using rule 41 (expression -> ID ANDEQUAL expression .) ]
  ! <               [ reduce using rule 41 (expression -> ID ANDEQUAL expression .) ]
  ! >               [ reduce using rule 41 (expression -> ID ANDEQUAL expression .) ]
  ! GE              [ reduce using rule 41 (expression -> ID ANDEQUAL expression .) ]
  ! LE              [ reduce using rule 41 (expression -> ID ANDEQUAL expression .) ]


state 108

    (42) expression -> ID OREQUAL expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 42 (expression -> ID OREQUAL expression .)
    )               reduce using rule 42 (expression -> ID OREQUAL expression .)
    ,               reduce using rule 42 (expression -> ID OREQUAL expression .)
    ]               reduce using rule 42 (expression -> ID OREQUAL expression .)
    }               reduce using rule 42 (expression -> ID OREQUAL expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 42 (expression -> ID OREQUAL expression .) ]
  ! -               [ reduce using rule 42 (expression -> ID OREQUAL expression .) ]
  ! *               [ reduce using rule 42 (expression -> ID OREQUAL expression .) ]
  ! /               [ reduce using rule 42 (expression -> ID OREQUAL expression .) ]
  ! &               [ reduce using rule 42 (expression -> ID OREQUAL expression .) ]
  ! |               [ reduce using rule 42 (expression -> ID OREQUAL expression .) ]
  ! ^               [ reduce using rule 42 (expression -> ID OREQUAL expression .) ]
  ! EQ              [ reduce using rule 42 (expression -> ID OREQUAL expression .) ]
  ! NE              [ reduce using rule 42 (expression -> ID OREQUAL expression .) ]
  ! LOR             [ reduce using rule 42 (expression -> ID OREQUAL expression .) ]
  ! LAND            [ reduce using rule 42 (expression -> ID OREQUAL expression .) ]
  ! <               [ reduce using rule 42 (expression -> ID OREQUAL expression .) ]
  ! >               [ reduce using rule 42 (expression -> ID OREQUAL expression .) ]
  ! GE              [ reduce using rule 42 (expression -> ID OREQUAL expression .) ]
  ! LE              [ reduce using rule 42 (expression -> ID OREQUAL expression .) ]


state 109

    (43) expression -> ID TIMESEQUAL expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 43 (expression -> ID TIMESEQUAL expression .)
    )               reduce using rule 43 (expression -> ID TIMESEQUAL expression .)
    ,               reduce using rule 43 (expression -> ID TIMESEQUAL expression .)
    ]               reduce using rule 43 (expression -> ID TIMESEQUAL expression .)
    }               reduce using rule 43 (expression -> ID TIMESEQUAL expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 43 (expression -> ID TIMESEQUAL expression .) ]
  ! -               [ reduce using rule 43 (expression -> ID TIMESEQUAL expression .) ]
  ! *               [ reduce using rule 43 (expression -> ID TIMESEQUAL expression .) ]
  ! /               [ reduce using rule 43 (expression -> ID TIMESEQUAL expression .) ]
  ! &               [ reduce using rule 43 (expression -> ID TIMESEQUAL expression .) ]
  ! |               [ reduce using rule 43 (expression -> ID TIMESEQUAL expression .) ]
  ! ^               [ reduce using rule 43 (expression -> ID TIMESEQUAL expression .) ]
  ! EQ              [ reduce using rule 43 (expression -> ID TIMESEQUAL expression .) ]
  ! NE              [ reduce using rule 43 (expression -> ID TIMESEQUAL expression .) ]
  ! LOR             [ reduce using rule 43 (expression -> ID TIMESEQUAL expression .) ]
  ! LAND            [ reduce using rule 43 (expression -> ID TIMESEQUAL expression .) ]
  ! <               [ reduce using rule 43 (expression -> ID TIMESEQUAL expression .) ]
  ! >               [ reduce using rule 43 (expression -> ID TIMESEQUAL expression .) ]
  ! GE              [ reduce using rule 43 (expression -> ID TIMESEQUAL expression .) ]
  ! LE              [ reduce using rule 43 (expression -> ID TIMESEQUAL expression .) ]


state 110

    (44) expression -> ID DIVEQUAL expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 44 (expression -> ID DIVEQUAL expression .)
    )               reduce using rule 44 (expression -> ID DIVEQUAL expression .)
    ,               reduce using rule 44 (expression -> ID DIVEQUAL expression .)
    ]               reduce using rule 44 (expression -> ID DIVEQUAL expression .)
    }               reduce using rule 44 (expression -> ID DIVEQUAL expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 44 (expression -> ID DIVEQUAL expression .) ]
  ! -               [ reduce using rule 44 (expression -> ID DIVEQUAL expression .) ]
  ! *               [ reduce using rule 44 (expression -> ID DIVEQUAL expression .) ]
  ! /               [ reduce using rule 44 (expression -> ID DIVEQUAL expression .) ]
  ! &               [ reduce using rule 44 (expression -> ID DIVEQUAL expression .) ]
  ! |               [ reduce using rule 44 (expression -> ID DIVEQUAL expression .) ]
  ! ^               [ reduce using rule 44 (expression -> ID DIVEQUAL expression .) ]
  ! EQ              [ reduce using rule 44 (expression -> ID DIVEQUAL expression .) ]
  ! NE              [ reduce using rule 44 (expression -> ID DIVEQUAL expression .) ]
  ! LOR             [ reduce using rule 44 (expression -> ID DIVEQUAL expression .) ]
  ! LAND            [ reduce using rule 44 (expression -> ID DIVEQUAL expression .) ]
  ! <               [ reduce using rule 44 (expression -> ID DIVEQUAL expression .) ]
  ! >               [ reduce using rule 44 (expression -> ID DIVEQUAL expression .) ]
  ! GE              [ reduce using rule 44 (expression -> ID DIVEQUAL expression .) ]
  ! LE              [ reduce using rule 44 (expression -> ID DIVEQUAL expression .) ]


state 111

    (45) expression -> ID PLUSEQUAL expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 45 (expression -> ID PLUSEQUAL expression .)
    )               reduce using rule 45 (expression -> ID PLUSEQUAL expression .)
    ,               reduce using rule 45 (expression -> ID PLUSEQUAL expression .)
    ]               reduce using rule 45 (expression -> ID PLUSEQUAL expression .)
    }               reduce using rule 45 (expression -> ID PLUSEQUAL expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 45 (expression -> ID PLUSEQUAL expression .) ]
  ! -               [ reduce using rule 45 (expression -> ID PLUSEQUAL expression .) ]
  ! *               [ reduce using rule 45 (expression -> ID PLUSEQUAL expression .) ]
  ! /               [ reduce using rule 45 (expression -> ID PLUSEQUAL expression .) ]
  ! &               [ reduce using rule 45 (expression -> ID PLUSEQUAL expression .) ]
  ! |               [ reduce using rule 45 (expression -> ID PLUSEQUAL expression .) ]
  ! ^               [ reduce using rule 45 (expression -> ID PLUSEQUAL expression .) ]
  ! EQ              [ reduce using rule 45 (expression -> ID PLUSEQUAL expression .) ]
  ! NE              [ reduce using rule 45 (expression -> ID PLUSEQUAL expression .) ]
  ! LOR             [ reduce using rule 45 (expression -> ID PLUSEQUAL expression .) ]
  ! LAND            [ reduce using rule 45 (expression -> ID PLUSEQUAL expression .) ]
  ! <               [ reduce using rule 45 (expression -> ID PLUSEQUAL expression .) ]
  ! >               [ reduce using rule 45 (expression -> ID PLUSEQUAL expression .) ]
  ! GE              [ reduce using rule 45 (expression -> ID PLUSEQUAL expression .) ]
  ! LE              [ reduce using rule 45 (expression -> ID PLUSEQUAL expression .) ]


state 112

    (46) expression -> ID MINUSEQUAL expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 46 (expression -> ID MINUSEQUAL expression .)
    )               reduce using rule 46 (expression -> ID MINUSEQUAL expression .)
    ,               reduce using rule 46 (expression -> ID MINUSEQUAL expression .)
    ]               reduce using rule 46 (expression -> ID MINUSEQUAL expression .)
    }               reduce using rule 46 (expression -> ID MINUSEQUAL expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 46 (expression -> ID MINUSEQUAL expression .) ]
  ! -               [ reduce using rule 46 (expression -> ID MINUSEQUAL expression .) ]
  ! *               [ reduce using rule 46 (expression -> ID MINUSEQUAL expression .) ]
  ! /               [ reduce using rule 46 (expression -> ID MINUSEQUAL expression .) ]
  ! &               [ reduce using rule 46 (expression -> ID MINUSEQUAL expression .) ]
  ! |               [ reduce using rule 46 (expression -> ID MINUSEQUAL expression .) ]
  ! ^               [ reduce using rule 46 (expression -> ID MINUSEQUAL expression .) ]
  ! EQ              [ reduce using rule 46 (expression -> ID MINUSEQUAL expression .) ]
  ! NE              [ reduce using rule 46 (expression -> ID MINUSEQUAL expression .) ]
  ! LOR             [ reduce using rule 46 (expression -> ID MINUSEQUAL expression .) ]
  ! LAND            [ reduce using rule 46 (expression -> ID MINUSEQUAL expression .) ]
  ! <               [ reduce using rule 46 (expression -> ID MINUSEQUAL expression .) ]
  ! >               [ reduce using rule 46 (expression -> ID MINUSEQUAL expression .) ]
  ! GE              [ reduce using rule 46 (expression -> ID MINUSEQUAL expression .) ]
  ! LE              [ reduce using rule 46 (expression -> ID MINUSEQUAL expression .) ]


state 113

    (47) expression -> ID = expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 47 (expression -> ID = expression .)
    )               reduce using rule 47 (expression -> ID = expression .)
    ,               reduce using rule 47 (expression -> ID = expression .)
    ]               reduce using rule 47 (expression -> ID = expression .)
    }               reduce using rule 47 (expression -> ID = expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 47 (expression -> ID = expression .) ]
  ! -               [ reduce using rule 47 (expression -> ID = expression .) ]
  ! *               [ reduce using rule 47 (expression -> ID = expression .) ]
  ! /               [ reduce using rule 47 (expression -> ID = expression .) ]
  ! &               [ reduce using rule 47 (expression -> ID = expression .) ]
  ! |               [ reduce using rule 47 (expression -> ID = expression .) ]
  ! ^               [ reduce using rule 47 (expression -> ID = expression .) ]
  ! EQ              [ reduce using rule 47 (expression -> ID = expression .) ]
  ! NE              [ reduce using rule 47 (expression -> ID = expression .) ]
  ! LOR             [ reduce using rule 47 (expression -> ID = expression .) ]
  ! LAND            [ reduce using rule 47 (expression -> ID = expression .) ]
  ! <               [ reduce using rule 47 (expression -> ID = expression .) ]
  ! >               [ reduce using rule 47 (expression -> ID = expression .) ]
  ! GE              [ reduce using rule 47 (expression -> ID = expression .) ]
  ! LE              [ reduce using rule 47 (expression -> ID = expression .) ]


state 114

    (62) expression -> ID [ expression . ]
    (63) expression -> ID [ expression . ] = expression
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    ]               shift and go to state 151
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75


state 115

    (52) expression -> expression + expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    +               reduce using rule 52 (expression -> expression + expression .)
    -               reduce using rule 52 (expression -> expression + expression .)
    &               reduce using rule 52 (expression -> expression + expression .)
    |               reduce using rule 52 (expression -> expression + expression .)
    ^               reduce using rule 52 (expression -> expression + expression .)
    EQ              reduce using rule 52 (expression -> expression + expression .)
    NE              reduce using rule 52 (expression -> expression + expression .)
    LOR             reduce using rule 52 (expression -> expression + expression .)
    LAND            reduce using rule 52 (expression -> expression + expression .)
    <               reduce using rule 52 (expression -> expression + expression .)
    >               reduce using rule 52 (expression -> expression + expression .)
    GE              reduce using rule 52 (expression -> expression + expression .)
    LE              reduce using rule 52 (expression -> expression + expression .)
    ;               reduce using rule 52 (expression -> expression + expression .)
    )               reduce using rule 52 (expression -> expression + expression .)
    ,               reduce using rule 52 (expression -> expression + expression .)
    ]               reduce using rule 52 (expression -> expression + expression .)
    }               reduce using rule 52 (expression -> expression + expression .)
    *               shift and go to state 63
    /               shift and go to state 64

  ! *               [ reduce using rule 52 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 52 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 61 ]
  ! -               [ shift and go to state 62 ]
  ! &               [ shift and go to state 65 ]
  ! |               [ shift and go to state 66 ]
  ! ^               [ shift and go to state 67 ]
  ! EQ              [ shift and go to state 68 ]
  ! NE              [ shift and go to state 69 ]
  ! LOR             [ shift and go to state 70 ]
  ! LAND            [ shift and go to state 71 ]
  ! <               [ shift and go to state 72 ]
  ! >               [ shift and go to state 73 ]
  ! GE              [ shift and go to state 74 ]
  ! LE              [ shift and go to state 75 ]


state 116

    (53) expression -> expression - expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    +               reduce using rule 53 (expression -> expression - expression .)
    -               reduce using rule 53 (expression -> expression - expression .)
    &               reduce using rule 53 (expression -> expression - expression .)
    |               reduce using rule 53 (expression -> expression - expression .)
    ^               reduce using rule 53 (expression -> expression - expression .)
    EQ              reduce using rule 53 (expression -> expression - expression .)
    NE              reduce using rule 53 (expression -> expression - expression .)
    LOR             reduce using rule 53 (expression -> expression - expression .)
    LAND            reduce using rule 53 (expression -> expression - expression .)
    <               reduce using rule 53 (expression -> expression - expression .)
    >               reduce using rule 53 (expression -> expression - expression .)
    GE              reduce using rule 53 (expression -> expression - expression .)
    LE              reduce using rule 53 (expression -> expression - expression .)
    ;               reduce using rule 53 (expression -> expression - expression .)
    )               reduce using rule 53 (expression -> expression - expression .)
    ,               reduce using rule 53 (expression -> expression - expression .)
    ]               reduce using rule 53 (expression -> expression - expression .)
    }               reduce using rule 53 (expression -> expression - expression .)
    *               shift and go to state 63
    /               shift and go to state 64

  ! *               [ reduce using rule 53 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 53 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 61 ]
  ! -               [ shift and go to state 62 ]
  ! &               [ shift and go to state 65 ]
  ! |               [ shift and go to state 66 ]
  ! ^               [ shift and go to state 67 ]
  ! EQ              [ shift and go to state 68 ]
  ! NE              [ shift and go to state 69 ]
  ! LOR             [ shift and go to state 70 ]
  ! LAND            [ shift and go to state 71 ]
  ! <               [ shift and go to state 72 ]
  ! >               [ shift and go to state 73 ]
  ! GE              [ shift and go to state 74 ]
  ! LE              [ shift and go to state 75 ]


state 117

    (54) expression -> expression * expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    +               reduce using rule 54 (expression -> expression * expression .)
    -               reduce using rule 54 (expression -> expression * expression .)
    *               reduce using rule 54 (expression -> expression * expression .)
    /               reduce using rule 54 (expression -> expression * expression .)
    &               reduce using rule 54 (expression -> expression * expression .)
    |               reduce using rule 54 (expression -> expression * expression .)
    ^               reduce using rule 54 (expression -> expression * expression .)
    EQ              reduce using rule 54 (expression -> expression * expression .)
    NE              reduce using rule 54 (expression -> expression * expression .)
    LOR             reduce using rule 54 (expression -> expression * expression .)
    LAND            reduce using rule 54 (expression -> expression * expression .)
    <               reduce using rule 54 (expression -> expression * expression .)
    >               reduce using rule 54 (expression -> expression * expression .)
    GE              reduce using rule 54 (expression -> expression * expression .)
    LE              reduce using rule 54 (expression -> expression * expression .)
    ;               reduce using rule 54 (expression -> expression * expression .)
    )               reduce using rule 54 (expression -> expression * expression .)
    ,               reduce using rule 54 (expression -> expression * expression .)
    ]               reduce using rule 54 (expression -> expression * expression .)
    }               reduce using rule 54 (expression -> expression * expression .)

  ! +               [ shift and go to state 61 ]
  ! -               [ shift and go to state 62 ]
  ! *               [ shift and go to state 63 ]
  ! /               [ shift and go to state 64 ]
  ! &               [ shift and go to state 65 ]
  ! |               [ shift and go to state 66 ]
  ! ^               [ shift and go to state 67 ]
  ! EQ              [ shift and go to state 68 ]
  ! NE              [ shift and go to state 69 ]
  ! LOR             [ shift and go to state 70 ]
  ! LAND            [ shift and go to state 71 ]
  ! <               [ shift and go to state 72 ]
  ! >               [ shift and go to state 73 ]
  ! GE              [ shift and go to state 74 ]
  ! LE              [ shift and go to state 75 ]


state 118

    (55) expression -> expression / expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    +               reduce using rule 55 (expression -> expression / expression .)
    -               reduce using rule 55 (expression -> expression / expression .)
    *               reduce using rule 55 (expression -> expression / expression .)
    /               reduce using rule 55 (expression -> expression / expression .)
    &               reduce using rule 55 (expression -> expression / expression .)
    |               reduce using rule 55 (expression -> expression / expression .)
    ^               reduce using rule 55 (expression -> expression / expression .)
    EQ              reduce using rule 55 (expression -> expression / expression .)
    NE              reduce using rule 55 (expression -> expression / expression .)
    LOR             reduce using rule 55 (expression -> expression / expression .)
    LAND            reduce using rule 55 (expression -> expression / expression .)
    <               reduce using rule 55 (expression -> expression / expression .)
    >               reduce using rule 55 (expression -> expression / expression .)
    GE              reduce using rule 55 (expression -> expression / expression .)
    LE              reduce using rule 55 (expression -> expression / expression .)
    ;               reduce using rule 55 (expression -> expression / expression .)
    )               reduce using rule 55 (expression -> expression / expression .)
    ,               reduce using rule 55 (expression -> expression / expression .)
    ]               reduce using rule 55 (expression -> expression / expression .)
    }               reduce using rule 55 (expression -> expression / expression .)

  ! +               [ shift and go to state 61 ]
  ! -               [ shift and go to state 62 ]
  ! *               [ shift and go to state 63 ]
  ! /               [ shift and go to state 64 ]
  ! &               [ shift and go to state 65 ]
  ! |               [ shift and go to state 66 ]
  ! ^               [ shift and go to state 67 ]
  ! EQ              [ shift and go to state 68 ]
  ! NE              [ shift and go to state 69 ]
  ! LOR             [ shift and go to state 70 ]
  ! LAND            [ shift and go to state 71 ]
  ! <               [ shift and go to state 72 ]
  ! >               [ shift and go to state 73 ]
  ! GE              [ shift and go to state 74 ]
  ! LE              [ shift and go to state 75 ]


state 119

    (56) expression -> expression & expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 56 (expression -> expression & expression .)
    )               reduce using rule 56 (expression -> expression & expression .)
    ,               reduce using rule 56 (expression -> expression & expression .)
    ]               reduce using rule 56 (expression -> expression & expression .)
    }               reduce using rule 56 (expression -> expression & expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 56 (expression -> expression & expression .) ]
  ! -               [ reduce using rule 56 (expression -> expression & expression .) ]
  ! *               [ reduce using rule 56 (expression -> expression & expression .) ]
  ! /               [ reduce using rule 56 (expression -> expression & expression .) ]
  ! &               [ reduce using rule 56 (expression -> expression & expression .) ]
  ! |               [ reduce using rule 56 (expression -> expression & expression .) ]
  ! ^               [ reduce using rule 56 (expression -> expression & expression .) ]
  ! EQ              [ reduce using rule 56 (expression -> expression & expression .) ]
  ! NE              [ reduce using rule 56 (expression -> expression & expression .) ]
  ! LOR             [ reduce using rule 56 (expression -> expression & expression .) ]
  ! LAND            [ reduce using rule 56 (expression -> expression & expression .) ]
  ! <               [ reduce using rule 56 (expression -> expression & expression .) ]
  ! >               [ reduce using rule 56 (expression -> expression & expression .) ]
  ! GE              [ reduce using rule 56 (expression -> expression & expression .) ]
  ! LE              [ reduce using rule 56 (expression -> expression & expression .) ]


state 120

    (57) expression -> expression | expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 57 (expression -> expression | expression .)
    )               reduce using rule 57 (expression -> expression | expression .)
    ,               reduce using rule 57 (expression -> expression | expression .)
    ]               reduce using rule 57 (expression -> expression | expression .)
    }               reduce using rule 57 (expression -> expression | expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 57 (expression -> expression | expression .) ]
  ! -               [ reduce using rule 57 (expression -> expression | expression .) ]
  ! *               [ reduce using rule 57 (expression -> expression | expression .) ]
  ! /               [ reduce using rule 57 (expression -> expression | expression .) ]
  ! &               [ reduce using rule 57 (expression -> expression | expression .) ]
  ! |               [ reduce using rule 57 (expression -> expression | expression .) ]
  ! ^               [ reduce using rule 57 (expression -> expression | expression .) ]
  ! EQ              [ reduce using rule 57 (expression -> expression | expression .) ]
  ! NE              [ reduce using rule 57 (expression -> expression | expression .) ]
  ! LOR             [ reduce using rule 57 (expression -> expression | expression .) ]
  ! LAND            [ reduce using rule 57 (expression -> expression | expression .) ]
  ! <               [ reduce using rule 57 (expression -> expression | expression .) ]
  ! >               [ reduce using rule 57 (expression -> expression | expression .) ]
  ! GE              [ reduce using rule 57 (expression -> expression | expression .) ]
  ! LE              [ reduce using rule 57 (expression -> expression | expression .) ]


state 121

    (58) expression -> expression ^ expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 58 (expression -> expression ^ expression .)
    )               reduce using rule 58 (expression -> expression ^ expression .)
    ,               reduce using rule 58 (expression -> expression ^ expression .)
    ]               reduce using rule 58 (expression -> expression ^ expression .)
    }               reduce using rule 58 (expression -> expression ^ expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 58 (expression -> expression ^ expression .) ]
  ! -               [ reduce using rule 58 (expression -> expression ^ expression .) ]
  ! *               [ reduce using rule 58 (expression -> expression ^ expression .) ]
  ! /               [ reduce using rule 58 (expression -> expression ^ expression .) ]
  ! &               [ reduce using rule 58 (expression -> expression ^ expression .) ]
  ! |               [ reduce using rule 58 (expression -> expression ^ expression .) ]
  ! ^               [ reduce using rule 58 (expression -> expression ^ expression .) ]
  ! EQ              [ reduce using rule 58 (expression -> expression ^ expression .) ]
  ! NE              [ reduce using rule 58 (expression -> expression ^ expression .) ]
  ! LOR             [ reduce using rule 58 (expression -> expression ^ expression .) ]
  ! LAND            [ reduce using rule 58 (expression -> expression ^ expression .) ]
  ! <               [ reduce using rule 58 (expression -> expression ^ expression .) ]
  ! >               [ reduce using rule 58 (expression -> expression ^ expression .) ]
  ! GE              [ reduce using rule 58 (expression -> expression ^ expression .) ]
  ! LE              [ reduce using rule 58 (expression -> expression ^ expression .) ]


state 122

    (75) eq_exp -> expression EQ expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 75 (eq_exp -> expression EQ expression .)
    )               reduce using rule 75 (eq_exp -> expression EQ expression .)
    ,               reduce using rule 75 (eq_exp -> expression EQ expression .)
    ]               reduce using rule 75 (eq_exp -> expression EQ expression .)
    }               reduce using rule 75 (eq_exp -> expression EQ expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 75 (eq_exp -> expression EQ expression .) ]
  ! -               [ reduce using rule 75 (eq_exp -> expression EQ expression .) ]
  ! *               [ reduce using rule 75 (eq_exp -> expression EQ expression .) ]
  ! /               [ reduce using rule 75 (eq_exp -> expression EQ expression .) ]
  ! &               [ reduce using rule 75 (eq_exp -> expression EQ expression .) ]
  ! |               [ reduce using rule 75 (eq_exp -> expression EQ expression .) ]
  ! ^               [ reduce using rule 75 (eq_exp -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 75 (eq_exp -> expression EQ expression .) ]
  ! NE              [ reduce using rule 75 (eq_exp -> expression EQ expression .) ]
  ! LOR             [ reduce using rule 75 (eq_exp -> expression EQ expression .) ]
  ! LAND            [ reduce using rule 75 (eq_exp -> expression EQ expression .) ]
  ! <               [ reduce using rule 75 (eq_exp -> expression EQ expression .) ]
  ! >               [ reduce using rule 75 (eq_exp -> expression EQ expression .) ]
  ! GE              [ reduce using rule 75 (eq_exp -> expression EQ expression .) ]
  ! LE              [ reduce using rule 75 (eq_exp -> expression EQ expression .) ]


state 123

    (76) eq_exp -> expression NE expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 76 (eq_exp -> expression NE expression .)
    )               reduce using rule 76 (eq_exp -> expression NE expression .)
    ,               reduce using rule 76 (eq_exp -> expression NE expression .)
    ]               reduce using rule 76 (eq_exp -> expression NE expression .)
    }               reduce using rule 76 (eq_exp -> expression NE expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 76 (eq_exp -> expression NE expression .) ]
  ! -               [ reduce using rule 76 (eq_exp -> expression NE expression .) ]
  ! *               [ reduce using rule 76 (eq_exp -> expression NE expression .) ]
  ! /               [ reduce using rule 76 (eq_exp -> expression NE expression .) ]
  ! &               [ reduce using rule 76 (eq_exp -> expression NE expression .) ]
  ! |               [ reduce using rule 76 (eq_exp -> expression NE expression .) ]
  ! ^               [ reduce using rule 76 (eq_exp -> expression NE expression .) ]
  ! EQ              [ reduce using rule 76 (eq_exp -> expression NE expression .) ]
  ! NE              [ reduce using rule 76 (eq_exp -> expression NE expression .) ]
  ! LOR             [ reduce using rule 76 (eq_exp -> expression NE expression .) ]
  ! LAND            [ reduce using rule 76 (eq_exp -> expression NE expression .) ]
  ! <               [ reduce using rule 76 (eq_exp -> expression NE expression .) ]
  ! >               [ reduce using rule 76 (eq_exp -> expression NE expression .) ]
  ! GE              [ reduce using rule 76 (eq_exp -> expression NE expression .) ]
  ! LE              [ reduce using rule 76 (eq_exp -> expression NE expression .) ]


state 124

    (77) eq_exp -> expression LOR expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 77 (eq_exp -> expression LOR expression .)
    )               reduce using rule 77 (eq_exp -> expression LOR expression .)
    ,               reduce using rule 77 (eq_exp -> expression LOR expression .)
    ]               reduce using rule 77 (eq_exp -> expression LOR expression .)
    }               reduce using rule 77 (eq_exp -> expression LOR expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 77 (eq_exp -> expression LOR expression .) ]
  ! -               [ reduce using rule 77 (eq_exp -> expression LOR expression .) ]
  ! *               [ reduce using rule 77 (eq_exp -> expression LOR expression .) ]
  ! /               [ reduce using rule 77 (eq_exp -> expression LOR expression .) ]
  ! &               [ reduce using rule 77 (eq_exp -> expression LOR expression .) ]
  ! |               [ reduce using rule 77 (eq_exp -> expression LOR expression .) ]
  ! ^               [ reduce using rule 77 (eq_exp -> expression LOR expression .) ]
  ! EQ              [ reduce using rule 77 (eq_exp -> expression LOR expression .) ]
  ! NE              [ reduce using rule 77 (eq_exp -> expression LOR expression .) ]
  ! LOR             [ reduce using rule 77 (eq_exp -> expression LOR expression .) ]
  ! LAND            [ reduce using rule 77 (eq_exp -> expression LOR expression .) ]
  ! <               [ reduce using rule 77 (eq_exp -> expression LOR expression .) ]
  ! >               [ reduce using rule 77 (eq_exp -> expression LOR expression .) ]
  ! GE              [ reduce using rule 77 (eq_exp -> expression LOR expression .) ]
  ! LE              [ reduce using rule 77 (eq_exp -> expression LOR expression .) ]


state 125

    (78) eq_exp -> expression LAND expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 78 (eq_exp -> expression LAND expression .)
    )               reduce using rule 78 (eq_exp -> expression LAND expression .)
    ,               reduce using rule 78 (eq_exp -> expression LAND expression .)
    ]               reduce using rule 78 (eq_exp -> expression LAND expression .)
    }               reduce using rule 78 (eq_exp -> expression LAND expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 78 (eq_exp -> expression LAND expression .) ]
  ! -               [ reduce using rule 78 (eq_exp -> expression LAND expression .) ]
  ! *               [ reduce using rule 78 (eq_exp -> expression LAND expression .) ]
  ! /               [ reduce using rule 78 (eq_exp -> expression LAND expression .) ]
  ! &               [ reduce using rule 78 (eq_exp -> expression LAND expression .) ]
  ! |               [ reduce using rule 78 (eq_exp -> expression LAND expression .) ]
  ! ^               [ reduce using rule 78 (eq_exp -> expression LAND expression .) ]
  ! EQ              [ reduce using rule 78 (eq_exp -> expression LAND expression .) ]
  ! NE              [ reduce using rule 78 (eq_exp -> expression LAND expression .) ]
  ! LOR             [ reduce using rule 78 (eq_exp -> expression LAND expression .) ]
  ! LAND            [ reduce using rule 78 (eq_exp -> expression LAND expression .) ]
  ! <               [ reduce using rule 78 (eq_exp -> expression LAND expression .) ]
  ! >               [ reduce using rule 78 (eq_exp -> expression LAND expression .) ]
  ! GE              [ reduce using rule 78 (eq_exp -> expression LAND expression .) ]
  ! LE              [ reduce using rule 78 (eq_exp -> expression LAND expression .) ]


state 126

    (79) eq_exp -> expression < expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 79 (eq_exp -> expression < expression .)
    )               reduce using rule 79 (eq_exp -> expression < expression .)
    ,               reduce using rule 79 (eq_exp -> expression < expression .)
    ]               reduce using rule 79 (eq_exp -> expression < expression .)
    }               reduce using rule 79 (eq_exp -> expression < expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 79 (eq_exp -> expression < expression .) ]
  ! -               [ reduce using rule 79 (eq_exp -> expression < expression .) ]
  ! *               [ reduce using rule 79 (eq_exp -> expression < expression .) ]
  ! /               [ reduce using rule 79 (eq_exp -> expression < expression .) ]
  ! &               [ reduce using rule 79 (eq_exp -> expression < expression .) ]
  ! |               [ reduce using rule 79 (eq_exp -> expression < expression .) ]
  ! ^               [ reduce using rule 79 (eq_exp -> expression < expression .) ]
  ! EQ              [ reduce using rule 79 (eq_exp -> expression < expression .) ]
  ! NE              [ reduce using rule 79 (eq_exp -> expression < expression .) ]
  ! LOR             [ reduce using rule 79 (eq_exp -> expression < expression .) ]
  ! LAND            [ reduce using rule 79 (eq_exp -> expression < expression .) ]
  ! <               [ reduce using rule 79 (eq_exp -> expression < expression .) ]
  ! >               [ reduce using rule 79 (eq_exp -> expression < expression .) ]
  ! GE              [ reduce using rule 79 (eq_exp -> expression < expression .) ]
  ! LE              [ reduce using rule 79 (eq_exp -> expression < expression .) ]


state 127

    (80) eq_exp -> expression > expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 80 (eq_exp -> expression > expression .)
    )               reduce using rule 80 (eq_exp -> expression > expression .)
    ,               reduce using rule 80 (eq_exp -> expression > expression .)
    ]               reduce using rule 80 (eq_exp -> expression > expression .)
    }               reduce using rule 80 (eq_exp -> expression > expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 80 (eq_exp -> expression > expression .) ]
  ! -               [ reduce using rule 80 (eq_exp -> expression > expression .) ]
  ! *               [ reduce using rule 80 (eq_exp -> expression > expression .) ]
  ! /               [ reduce using rule 80 (eq_exp -> expression > expression .) ]
  ! &               [ reduce using rule 80 (eq_exp -> expression > expression .) ]
  ! |               [ reduce using rule 80 (eq_exp -> expression > expression .) ]
  ! ^               [ reduce using rule 80 (eq_exp -> expression > expression .) ]
  ! EQ              [ reduce using rule 80 (eq_exp -> expression > expression .) ]
  ! NE              [ reduce using rule 80 (eq_exp -> expression > expression .) ]
  ! LOR             [ reduce using rule 80 (eq_exp -> expression > expression .) ]
  ! LAND            [ reduce using rule 80 (eq_exp -> expression > expression .) ]
  ! <               [ reduce using rule 80 (eq_exp -> expression > expression .) ]
  ! >               [ reduce using rule 80 (eq_exp -> expression > expression .) ]
  ! GE              [ reduce using rule 80 (eq_exp -> expression > expression .) ]
  ! LE              [ reduce using rule 80 (eq_exp -> expression > expression .) ]


state 128

    (81) eq_exp -> expression GE expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 81 (eq_exp -> expression GE expression .)
    )               reduce using rule 81 (eq_exp -> expression GE expression .)
    ,               reduce using rule 81 (eq_exp -> expression GE expression .)
    ]               reduce using rule 81 (eq_exp -> expression GE expression .)
    }               reduce using rule 81 (eq_exp -> expression GE expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 81 (eq_exp -> expression GE expression .) ]
  ! -               [ reduce using rule 81 (eq_exp -> expression GE expression .) ]
  ! *               [ reduce using rule 81 (eq_exp -> expression GE expression .) ]
  ! /               [ reduce using rule 81 (eq_exp -> expression GE expression .) ]
  ! &               [ reduce using rule 81 (eq_exp -> expression GE expression .) ]
  ! |               [ reduce using rule 81 (eq_exp -> expression GE expression .) ]
  ! ^               [ reduce using rule 81 (eq_exp -> expression GE expression .) ]
  ! EQ              [ reduce using rule 81 (eq_exp -> expression GE expression .) ]
  ! NE              [ reduce using rule 81 (eq_exp -> expression GE expression .) ]
  ! LOR             [ reduce using rule 81 (eq_exp -> expression GE expression .) ]
  ! LAND            [ reduce using rule 81 (eq_exp -> expression GE expression .) ]
  ! <               [ reduce using rule 81 (eq_exp -> expression GE expression .) ]
  ! >               [ reduce using rule 81 (eq_exp -> expression GE expression .) ]
  ! GE              [ reduce using rule 81 (eq_exp -> expression GE expression .) ]
  ! LE              [ reduce using rule 81 (eq_exp -> expression GE expression .) ]


state 129

    (82) eq_exp -> expression LE expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 82 (eq_exp -> expression LE expression .)
    )               reduce using rule 82 (eq_exp -> expression LE expression .)
    ,               reduce using rule 82 (eq_exp -> expression LE expression .)
    ]               reduce using rule 82 (eq_exp -> expression LE expression .)
    }               reduce using rule 82 (eq_exp -> expression LE expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 82 (eq_exp -> expression LE expression .) ]
  ! -               [ reduce using rule 82 (eq_exp -> expression LE expression .) ]
  ! *               [ reduce using rule 82 (eq_exp -> expression LE expression .) ]
  ! /               [ reduce using rule 82 (eq_exp -> expression LE expression .) ]
  ! &               [ reduce using rule 82 (eq_exp -> expression LE expression .) ]
  ! |               [ reduce using rule 82 (eq_exp -> expression LE expression .) ]
  ! ^               [ reduce using rule 82 (eq_exp -> expression LE expression .) ]
  ! EQ              [ reduce using rule 82 (eq_exp -> expression LE expression .) ]
  ! NE              [ reduce using rule 82 (eq_exp -> expression LE expression .) ]
  ! LOR             [ reduce using rule 82 (eq_exp -> expression LE expression .) ]
  ! LAND            [ reduce using rule 82 (eq_exp -> expression LE expression .) ]
  ! <               [ reduce using rule 82 (eq_exp -> expression LE expression .) ]
  ! >               [ reduce using rule 82 (eq_exp -> expression LE expression .) ]
  ! GE              [ reduce using rule 82 (eq_exp -> expression LE expression .) ]
  ! LE              [ reduce using rule 82 (eq_exp -> expression LE expression .) ]


state 130

    (61) expression -> ( expression ) .

    +               reduce using rule 61 (expression -> ( expression ) .)
    -               reduce using rule 61 (expression -> ( expression ) .)
    *               reduce using rule 61 (expression -> ( expression ) .)
    /               reduce using rule 61 (expression -> ( expression ) .)
    &               reduce using rule 61 (expression -> ( expression ) .)
    |               reduce using rule 61 (expression -> ( expression ) .)
    ^               reduce using rule 61 (expression -> ( expression ) .)
    EQ              reduce using rule 61 (expression -> ( expression ) .)
    NE              reduce using rule 61 (expression -> ( expression ) .)
    LOR             reduce using rule 61 (expression -> ( expression ) .)
    LAND            reduce using rule 61 (expression -> ( expression ) .)
    <               reduce using rule 61 (expression -> ( expression ) .)
    >               reduce using rule 61 (expression -> ( expression ) .)
    GE              reduce using rule 61 (expression -> ( expression ) .)
    LE              reduce using rule 61 (expression -> ( expression ) .)
    ;               reduce using rule 61 (expression -> ( expression ) .)
    )               reduce using rule 61 (expression -> ( expression ) .)
    ,               reduce using rule 61 (expression -> ( expression ) .)
    ]               reduce using rule 61 (expression -> ( expression ) .)
    }               reduce using rule 61 (expression -> ( expression ) .)


state 131

    (12) expression -> ASM ( S_CONST . )

    )               shift and go to state 152


state 132

    (13) expression -> PRINTSTR ( S_CONST . )

    )               shift and go to state 153


state 133

    (69) expression -> * ID = . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 154
    eq_exp                         shift and go to state 41

state 134

    (68) expression -> & ID [ . expression ]
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 155
    eq_exp                         shift and go to state 41

state 135

    (83) compound_statement -> { statement_list } .

    VOID            reduce using rule 83 (compound_statement -> { statement_list } .)
    INT             reduce using rule 83 (compound_statement -> { statement_list } .)
    CHAR            reduce using rule 83 (compound_statement -> { statement_list } .)
    FLOAT           reduce using rule 83 (compound_statement -> { statement_list } .)
    $end            reduce using rule 83 (compound_statement -> { statement_list } .)
    }               reduce using rule 83 (compound_statement -> { statement_list } .)
    RETURN          reduce using rule 83 (compound_statement -> { statement_list } .)
    BREAK           reduce using rule 83 (compound_statement -> { statement_list } .)
    CONTINUE        reduce using rule 83 (compound_statement -> { statement_list } .)
    WHILE           reduce using rule 83 (compound_statement -> { statement_list } .)
    DO              reduce using rule 83 (compound_statement -> { statement_list } .)
    FOR             reduce using rule 83 (compound_statement -> { statement_list } .)
    IF              reduce using rule 83 (compound_statement -> { statement_list } .)
    ID              reduce using rule 83 (compound_statement -> { statement_list } .)
    ASM             reduce using rule 83 (compound_statement -> { statement_list } .)
    PRINTSTR        reduce using rule 83 (compound_statement -> { statement_list } .)
    MINUSMINUS      reduce using rule 83 (compound_statement -> { statement_list } .)
    PLUSPLUS        reduce using rule 83 (compound_statement -> { statement_list } .)
    ~               reduce using rule 83 (compound_statement -> { statement_list } .)
    -               reduce using rule 83 (compound_statement -> { statement_list } .)
    (               reduce using rule 83 (compound_statement -> { statement_list } .)
    NUMBER          reduce using rule 83 (compound_statement -> { statement_list } .)
    &               reduce using rule 83 (compound_statement -> { statement_list } .)
    *               reduce using rule 83 (compound_statement -> { statement_list } .)
    C_CONST         reduce using rule 83 (compound_statement -> { statement_list } .)
    {               reduce using rule 83 (compound_statement -> { statement_list } .)
    ELSE            reduce using rule 83 (compound_statement -> { statement_list } .)


state 136

    (86) statement_list -> statement_list statement .

    }               reduce using rule 86 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 86 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 86 (statement_list -> statement_list statement .)
    CONTINUE        reduce using rule 86 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 86 (statement_list -> statement_list statement .)
    DO              reduce using rule 86 (statement_list -> statement_list statement .)
    FOR             reduce using rule 86 (statement_list -> statement_list statement .)
    IF              reduce using rule 86 (statement_list -> statement_list statement .)
    ID              reduce using rule 86 (statement_list -> statement_list statement .)
    ASM             reduce using rule 86 (statement_list -> statement_list statement .)
    PRINTSTR        reduce using rule 86 (statement_list -> statement_list statement .)
    MINUSMINUS      reduce using rule 86 (statement_list -> statement_list statement .)
    PLUSPLUS        reduce using rule 86 (statement_list -> statement_list statement .)
    ~               reduce using rule 86 (statement_list -> statement_list statement .)
    -               reduce using rule 86 (statement_list -> statement_list statement .)
    (               reduce using rule 86 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 86 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 86 (statement_list -> statement_list statement .)
    &               reduce using rule 86 (statement_list -> statement_list statement .)
    *               reduce using rule 86 (statement_list -> statement_list statement .)
    C_CONST         reduce using rule 86 (statement_list -> statement_list statement .)
    {               reduce using rule 86 (statement_list -> statement_list statement .)
    VOID            reduce using rule 86 (statement_list -> statement_list statement .)
    INT             reduce using rule 86 (statement_list -> statement_list statement .)
    CHAR            reduce using rule 86 (statement_list -> statement_list statement .)


state 137

    (7) statement -> expression ; .

    }               reduce using rule 7 (statement -> expression ; .)
    RETURN          reduce using rule 7 (statement -> expression ; .)
    BREAK           reduce using rule 7 (statement -> expression ; .)
    CONTINUE        reduce using rule 7 (statement -> expression ; .)
    WHILE           reduce using rule 7 (statement -> expression ; .)
    DO              reduce using rule 7 (statement -> expression ; .)
    FOR             reduce using rule 7 (statement -> expression ; .)
    IF              reduce using rule 7 (statement -> expression ; .)
    ID              reduce using rule 7 (statement -> expression ; .)
    ASM             reduce using rule 7 (statement -> expression ; .)
    PRINTSTR        reduce using rule 7 (statement -> expression ; .)
    MINUSMINUS      reduce using rule 7 (statement -> expression ; .)
    PLUSPLUS        reduce using rule 7 (statement -> expression ; .)
    ~               reduce using rule 7 (statement -> expression ; .)
    -               reduce using rule 7 (statement -> expression ; .)
    (               reduce using rule 7 (statement -> expression ; .)
    NUMBER          reduce using rule 7 (statement -> expression ; .)
    FLOAT           reduce using rule 7 (statement -> expression ; .)
    &               reduce using rule 7 (statement -> expression ; .)
    *               reduce using rule 7 (statement -> expression ; .)
    C_CONST         reduce using rule 7 (statement -> expression ; .)
    {               reduce using rule 7 (statement -> expression ; .)
    VOID            reduce using rule 7 (statement -> expression ; .)
    INT             reduce using rule 7 (statement -> expression ; .)
    CHAR            reduce using rule 7 (statement -> expression ; .)
    ELSE            reduce using rule 7 (statement -> expression ; .)


state 138

    (8) statement -> declaration ; .

    }               reduce using rule 8 (statement -> declaration ; .)
    RETURN          reduce using rule 8 (statement -> declaration ; .)
    BREAK           reduce using rule 8 (statement -> declaration ; .)
    CONTINUE        reduce using rule 8 (statement -> declaration ; .)
    WHILE           reduce using rule 8 (statement -> declaration ; .)
    DO              reduce using rule 8 (statement -> declaration ; .)
    FOR             reduce using rule 8 (statement -> declaration ; .)
    IF              reduce using rule 8 (statement -> declaration ; .)
    ID              reduce using rule 8 (statement -> declaration ; .)
    ASM             reduce using rule 8 (statement -> declaration ; .)
    PRINTSTR        reduce using rule 8 (statement -> declaration ; .)
    MINUSMINUS      reduce using rule 8 (statement -> declaration ; .)
    PLUSPLUS        reduce using rule 8 (statement -> declaration ; .)
    ~               reduce using rule 8 (statement -> declaration ; .)
    -               reduce using rule 8 (statement -> declaration ; .)
    (               reduce using rule 8 (statement -> declaration ; .)
    NUMBER          reduce using rule 8 (statement -> declaration ; .)
    FLOAT           reduce using rule 8 (statement -> declaration ; .)
    &               reduce using rule 8 (statement -> declaration ; .)
    *               reduce using rule 8 (statement -> declaration ; .)
    C_CONST         reduce using rule 8 (statement -> declaration ; .)
    {               reduce using rule 8 (statement -> declaration ; .)
    VOID            reduce using rule 8 (statement -> declaration ; .)
    INT             reduce using rule 8 (statement -> declaration ; .)
    CHAR            reduce using rule 8 (statement -> declaration ; .)
    ELSE            reduce using rule 8 (statement -> declaration ; .)


state 139

    (21) statement -> RETURN expression . ;
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    ;               shift and go to state 156
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75


state 140

    (22) statement -> RETURN ; .

    }               reduce using rule 22 (statement -> RETURN ; .)
    RETURN          reduce using rule 22 (statement -> RETURN ; .)
    BREAK           reduce using rule 22 (statement -> RETURN ; .)
    CONTINUE        reduce using rule 22 (statement -> RETURN ; .)
    WHILE           reduce using rule 22 (statement -> RETURN ; .)
    DO              reduce using rule 22 (statement -> RETURN ; .)
    FOR             reduce using rule 22 (statement -> RETURN ; .)
    IF              reduce using rule 22 (statement -> RETURN ; .)
    ID              reduce using rule 22 (statement -> RETURN ; .)
    ASM             reduce using rule 22 (statement -> RETURN ; .)
    PRINTSTR        reduce using rule 22 (statement -> RETURN ; .)
    MINUSMINUS      reduce using rule 22 (statement -> RETURN ; .)
    PLUSPLUS        reduce using rule 22 (statement -> RETURN ; .)
    ~               reduce using rule 22 (statement -> RETURN ; .)
    -               reduce using rule 22 (statement -> RETURN ; .)
    (               reduce using rule 22 (statement -> RETURN ; .)
    NUMBER          reduce using rule 22 (statement -> RETURN ; .)
    FLOAT           reduce using rule 22 (statement -> RETURN ; .)
    &               reduce using rule 22 (statement -> RETURN ; .)
    *               reduce using rule 22 (statement -> RETURN ; .)
    C_CONST         reduce using rule 22 (statement -> RETURN ; .)
    {               reduce using rule 22 (statement -> RETURN ; .)
    VOID            reduce using rule 22 (statement -> RETURN ; .)
    INT             reduce using rule 22 (statement -> RETURN ; .)
    CHAR            reduce using rule 22 (statement -> RETURN ; .)
    ELSE            reduce using rule 22 (statement -> RETURN ; .)


state 141

    (23) statement -> BREAK ; .

    }               reduce using rule 23 (statement -> BREAK ; .)
    RETURN          reduce using rule 23 (statement -> BREAK ; .)
    BREAK           reduce using rule 23 (statement -> BREAK ; .)
    CONTINUE        reduce using rule 23 (statement -> BREAK ; .)
    WHILE           reduce using rule 23 (statement -> BREAK ; .)
    DO              reduce using rule 23 (statement -> BREAK ; .)
    FOR             reduce using rule 23 (statement -> BREAK ; .)
    IF              reduce using rule 23 (statement -> BREAK ; .)
    ID              reduce using rule 23 (statement -> BREAK ; .)
    ASM             reduce using rule 23 (statement -> BREAK ; .)
    PRINTSTR        reduce using rule 23 (statement -> BREAK ; .)
    MINUSMINUS      reduce using rule 23 (statement -> BREAK ; .)
    PLUSPLUS        reduce using rule 23 (statement -> BREAK ; .)
    ~               reduce using rule 23 (statement -> BREAK ; .)
    -               reduce using rule 23 (statement -> BREAK ; .)
    (               reduce using rule 23 (statement -> BREAK ; .)
    NUMBER          reduce using rule 23 (statement -> BREAK ; .)
    FLOAT           reduce using rule 23 (statement -> BREAK ; .)
    &               reduce using rule 23 (statement -> BREAK ; .)
    *               reduce using rule 23 (statement -> BREAK ; .)
    C_CONST         reduce using rule 23 (statement -> BREAK ; .)
    {               reduce using rule 23 (statement -> BREAK ; .)
    VOID            reduce using rule 23 (statement -> BREAK ; .)
    INT             reduce using rule 23 (statement -> BREAK ; .)
    CHAR            reduce using rule 23 (statement -> BREAK ; .)
    ELSE            reduce using rule 23 (statement -> BREAK ; .)


state 142

    (24) statement -> CONTINUE ; .

    }               reduce using rule 24 (statement -> CONTINUE ; .)
    RETURN          reduce using rule 24 (statement -> CONTINUE ; .)
    BREAK           reduce using rule 24 (statement -> CONTINUE ; .)
    CONTINUE        reduce using rule 24 (statement -> CONTINUE ; .)
    WHILE           reduce using rule 24 (statement -> CONTINUE ; .)
    DO              reduce using rule 24 (statement -> CONTINUE ; .)
    FOR             reduce using rule 24 (statement -> CONTINUE ; .)
    IF              reduce using rule 24 (statement -> CONTINUE ; .)
    ID              reduce using rule 24 (statement -> CONTINUE ; .)
    ASM             reduce using rule 24 (statement -> CONTINUE ; .)
    PRINTSTR        reduce using rule 24 (statement -> CONTINUE ; .)
    MINUSMINUS      reduce using rule 24 (statement -> CONTINUE ; .)
    PLUSPLUS        reduce using rule 24 (statement -> CONTINUE ; .)
    ~               reduce using rule 24 (statement -> CONTINUE ; .)
    -               reduce using rule 24 (statement -> CONTINUE ; .)
    (               reduce using rule 24 (statement -> CONTINUE ; .)
    NUMBER          reduce using rule 24 (statement -> CONTINUE ; .)
    FLOAT           reduce using rule 24 (statement -> CONTINUE ; .)
    &               reduce using rule 24 (statement -> CONTINUE ; .)
    *               reduce using rule 24 (statement -> CONTINUE ; .)
    C_CONST         reduce using rule 24 (statement -> CONTINUE ; .)
    {               reduce using rule 24 (statement -> CONTINUE ; .)
    VOID            reduce using rule 24 (statement -> CONTINUE ; .)
    INT             reduce using rule 24 (statement -> CONTINUE ; .)
    CHAR            reduce using rule 24 (statement -> CONTINUE ; .)
    ELSE            reduce using rule 24 (statement -> CONTINUE ; .)


state 143

    (25) statement -> WHILE ( . expression ) statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 157
    eq_exp                         shift and go to state 41

state 144

    (26) statement -> DO statement . WHILE ( expression ) ;

    WHILE           shift and go to state 158


state 145

    (27) statement -> FOR ( . expression ; expression ; expression ) statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 159
    eq_exp                         shift and go to state 41

state 146

    (28) statement -> IF ( . expression ) statement
    (29) statement -> IF ( . expression ) statement ELSE statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 160
    eq_exp                         shift and go to state 41

state 147

    (30) declaration -> declaration_specifier ID [ NUMBER ] = { . expression_list }
    (48) expression_list -> . expression
    (49) expression_list -> . expression_list , expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression_list                shift and go to state 161
    expression                     shift and go to state 105
    eq_exp                         shift and go to state 41

state 148

    (32) declaration -> declaration_specifier ID [ FLOAT ] = { . expression_list }
    (48) expression_list -> . expression
    (49) expression_list -> . expression_list , expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression_list                shift and go to state 162
    expression                     shift and go to state 105
    eq_exp                         shift and go to state 41

state 149

    (11) expression -> ID ( expression_list ) .

    +               reduce using rule 11 (expression -> ID ( expression_list ) .)
    -               reduce using rule 11 (expression -> ID ( expression_list ) .)
    *               reduce using rule 11 (expression -> ID ( expression_list ) .)
    /               reduce using rule 11 (expression -> ID ( expression_list ) .)
    &               reduce using rule 11 (expression -> ID ( expression_list ) .)
    |               reduce using rule 11 (expression -> ID ( expression_list ) .)
    ^               reduce using rule 11 (expression -> ID ( expression_list ) .)
    EQ              reduce using rule 11 (expression -> ID ( expression_list ) .)
    NE              reduce using rule 11 (expression -> ID ( expression_list ) .)
    LOR             reduce using rule 11 (expression -> ID ( expression_list ) .)
    LAND            reduce using rule 11 (expression -> ID ( expression_list ) .)
    <               reduce using rule 11 (expression -> ID ( expression_list ) .)
    >               reduce using rule 11 (expression -> ID ( expression_list ) .)
    GE              reduce using rule 11 (expression -> ID ( expression_list ) .)
    LE              reduce using rule 11 (expression -> ID ( expression_list ) .)
    ;               reduce using rule 11 (expression -> ID ( expression_list ) .)
    )               reduce using rule 11 (expression -> ID ( expression_list ) .)
    ,               reduce using rule 11 (expression -> ID ( expression_list ) .)
    ]               reduce using rule 11 (expression -> ID ( expression_list ) .)
    }               reduce using rule 11 (expression -> ID ( expression_list ) .)


state 150

    (49) expression_list -> expression_list , . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 163
    eq_exp                         shift and go to state 41

state 151

    (62) expression -> ID [ expression ] .
    (63) expression -> ID [ expression ] . = expression

    +               reduce using rule 62 (expression -> ID [ expression ] .)
    -               reduce using rule 62 (expression -> ID [ expression ] .)
    *               reduce using rule 62 (expression -> ID [ expression ] .)
    /               reduce using rule 62 (expression -> ID [ expression ] .)
    &               reduce using rule 62 (expression -> ID [ expression ] .)
    |               reduce using rule 62 (expression -> ID [ expression ] .)
    ^               reduce using rule 62 (expression -> ID [ expression ] .)
    EQ              reduce using rule 62 (expression -> ID [ expression ] .)
    NE              reduce using rule 62 (expression -> ID [ expression ] .)
    LOR             reduce using rule 62 (expression -> ID [ expression ] .)
    LAND            reduce using rule 62 (expression -> ID [ expression ] .)
    <               reduce using rule 62 (expression -> ID [ expression ] .)
    >               reduce using rule 62 (expression -> ID [ expression ] .)
    GE              reduce using rule 62 (expression -> ID [ expression ] .)
    LE              reduce using rule 62 (expression -> ID [ expression ] .)
    ;               reduce using rule 62 (expression -> ID [ expression ] .)
    )               reduce using rule 62 (expression -> ID [ expression ] .)
    ,               reduce using rule 62 (expression -> ID [ expression ] .)
    ]               reduce using rule 62 (expression -> ID [ expression ] .)
    }               reduce using rule 62 (expression -> ID [ expression ] .)
    =               shift and go to state 164


state 152

    (12) expression -> ASM ( S_CONST ) .

    +               reduce using rule 12 (expression -> ASM ( S_CONST ) .)
    -               reduce using rule 12 (expression -> ASM ( S_CONST ) .)
    *               reduce using rule 12 (expression -> ASM ( S_CONST ) .)
    /               reduce using rule 12 (expression -> ASM ( S_CONST ) .)
    &               reduce using rule 12 (expression -> ASM ( S_CONST ) .)
    |               reduce using rule 12 (expression -> ASM ( S_CONST ) .)
    ^               reduce using rule 12 (expression -> ASM ( S_CONST ) .)
    EQ              reduce using rule 12 (expression -> ASM ( S_CONST ) .)
    NE              reduce using rule 12 (expression -> ASM ( S_CONST ) .)
    LOR             reduce using rule 12 (expression -> ASM ( S_CONST ) .)
    LAND            reduce using rule 12 (expression -> ASM ( S_CONST ) .)
    <               reduce using rule 12 (expression -> ASM ( S_CONST ) .)
    >               reduce using rule 12 (expression -> ASM ( S_CONST ) .)
    GE              reduce using rule 12 (expression -> ASM ( S_CONST ) .)
    LE              reduce using rule 12 (expression -> ASM ( S_CONST ) .)
    ;               reduce using rule 12 (expression -> ASM ( S_CONST ) .)
    )               reduce using rule 12 (expression -> ASM ( S_CONST ) .)
    ,               reduce using rule 12 (expression -> ASM ( S_CONST ) .)
    ]               reduce using rule 12 (expression -> ASM ( S_CONST ) .)
    }               reduce using rule 12 (expression -> ASM ( S_CONST ) .)


state 153

    (13) expression -> PRINTSTR ( S_CONST ) .

    +               reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)
    -               reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)
    *               reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)
    /               reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)
    &               reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)
    |               reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)
    ^               reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)
    EQ              reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)
    NE              reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)
    LOR             reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)
    LAND            reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)
    <               reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)
    >               reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)
    GE              reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)
    LE              reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)
    ;               reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)
    )               reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)
    ,               reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)
    ]               reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)
    }               reduce using rule 13 (expression -> PRINTSTR ( S_CONST ) .)


state 154

    (69) expression -> * ID = expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 69 (expression -> * ID = expression .)
    )               reduce using rule 69 (expression -> * ID = expression .)
    ,               reduce using rule 69 (expression -> * ID = expression .)
    ]               reduce using rule 69 (expression -> * ID = expression .)
    }               reduce using rule 69 (expression -> * ID = expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 69 (expression -> * ID = expression .) ]
  ! -               [ reduce using rule 69 (expression -> * ID = expression .) ]
  ! *               [ reduce using rule 69 (expression -> * ID = expression .) ]
  ! /               [ reduce using rule 69 (expression -> * ID = expression .) ]
  ! &               [ reduce using rule 69 (expression -> * ID = expression .) ]
  ! |               [ reduce using rule 69 (expression -> * ID = expression .) ]
  ! ^               [ reduce using rule 69 (expression -> * ID = expression .) ]
  ! EQ              [ reduce using rule 69 (expression -> * ID = expression .) ]
  ! NE              [ reduce using rule 69 (expression -> * ID = expression .) ]
  ! LOR             [ reduce using rule 69 (expression -> * ID = expression .) ]
  ! LAND            [ reduce using rule 69 (expression -> * ID = expression .) ]
  ! <               [ reduce using rule 69 (expression -> * ID = expression .) ]
  ! >               [ reduce using rule 69 (expression -> * ID = expression .) ]
  ! GE              [ reduce using rule 69 (expression -> * ID = expression .) ]
  ! LE              [ reduce using rule 69 (expression -> * ID = expression .) ]


state 155

    (68) expression -> & ID [ expression . ]
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    ]               shift and go to state 165
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75


state 156

    (21) statement -> RETURN expression ; .

    }               reduce using rule 21 (statement -> RETURN expression ; .)
    RETURN          reduce using rule 21 (statement -> RETURN expression ; .)
    BREAK           reduce using rule 21 (statement -> RETURN expression ; .)
    CONTINUE        reduce using rule 21 (statement -> RETURN expression ; .)
    WHILE           reduce using rule 21 (statement -> RETURN expression ; .)
    DO              reduce using rule 21 (statement -> RETURN expression ; .)
    FOR             reduce using rule 21 (statement -> RETURN expression ; .)
    IF              reduce using rule 21 (statement -> RETURN expression ; .)
    ID              reduce using rule 21 (statement -> RETURN expression ; .)
    ASM             reduce using rule 21 (statement -> RETURN expression ; .)
    PRINTSTR        reduce using rule 21 (statement -> RETURN expression ; .)
    MINUSMINUS      reduce using rule 21 (statement -> RETURN expression ; .)
    PLUSPLUS        reduce using rule 21 (statement -> RETURN expression ; .)
    ~               reduce using rule 21 (statement -> RETURN expression ; .)
    -               reduce using rule 21 (statement -> RETURN expression ; .)
    (               reduce using rule 21 (statement -> RETURN expression ; .)
    NUMBER          reduce using rule 21 (statement -> RETURN expression ; .)
    FLOAT           reduce using rule 21 (statement -> RETURN expression ; .)
    &               reduce using rule 21 (statement -> RETURN expression ; .)
    *               reduce using rule 21 (statement -> RETURN expression ; .)
    C_CONST         reduce using rule 21 (statement -> RETURN expression ; .)
    {               reduce using rule 21 (statement -> RETURN expression ; .)
    VOID            reduce using rule 21 (statement -> RETURN expression ; .)
    INT             reduce using rule 21 (statement -> RETURN expression ; .)
    CHAR            reduce using rule 21 (statement -> RETURN expression ; .)
    ELSE            reduce using rule 21 (statement -> RETURN expression ; .)


state 157

    (25) statement -> WHILE ( expression . ) statement
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    )               shift and go to state 166
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75


state 158

    (26) statement -> DO statement WHILE . ( expression ) ;

    (               shift and go to state 167


state 159

    (27) statement -> FOR ( expression . ; expression ; expression ) statement
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    ;               shift and go to state 168
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75


state 160

    (28) statement -> IF ( expression . ) statement
    (29) statement -> IF ( expression . ) statement ELSE statement
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    )               shift and go to state 169
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75


state 161

    (30) declaration -> declaration_specifier ID [ NUMBER ] = { expression_list . }
    (49) expression_list -> expression_list . , expression

    }               shift and go to state 170
    ,               shift and go to state 150


state 162

    (32) declaration -> declaration_specifier ID [ FLOAT ] = { expression_list . }
    (49) expression_list -> expression_list . , expression

    }               shift and go to state 171
    ,               shift and go to state 150


state 163

    (49) expression_list -> expression_list , expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    )               reduce using rule 49 (expression_list -> expression_list , expression .)
    ,               reduce using rule 49 (expression_list -> expression_list , expression .)
    }               reduce using rule 49 (expression_list -> expression_list , expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75


state 164

    (63) expression -> ID [ expression ] = . expression
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 172
    eq_exp                         shift and go to state 41

state 165

    (68) expression -> & ID [ expression ] .

    +               reduce using rule 68 (expression -> & ID [ expression ] .)
    -               reduce using rule 68 (expression -> & ID [ expression ] .)
    *               reduce using rule 68 (expression -> & ID [ expression ] .)
    /               reduce using rule 68 (expression -> & ID [ expression ] .)
    &               reduce using rule 68 (expression -> & ID [ expression ] .)
    |               reduce using rule 68 (expression -> & ID [ expression ] .)
    ^               reduce using rule 68 (expression -> & ID [ expression ] .)
    EQ              reduce using rule 68 (expression -> & ID [ expression ] .)
    NE              reduce using rule 68 (expression -> & ID [ expression ] .)
    LOR             reduce using rule 68 (expression -> & ID [ expression ] .)
    LAND            reduce using rule 68 (expression -> & ID [ expression ] .)
    <               reduce using rule 68 (expression -> & ID [ expression ] .)
    >               reduce using rule 68 (expression -> & ID [ expression ] .)
    GE              reduce using rule 68 (expression -> & ID [ expression ] .)
    LE              reduce using rule 68 (expression -> & ID [ expression ] .)
    ;               reduce using rule 68 (expression -> & ID [ expression ] .)
    )               reduce using rule 68 (expression -> & ID [ expression ] .)
    ,               reduce using rule 68 (expression -> & ID [ expression ] .)
    ]               reduce using rule 68 (expression -> & ID [ expression ] .)
    }               reduce using rule 68 (expression -> & ID [ expression ] .)


state 166

    (25) statement -> WHILE ( expression ) . statement
    (7) statement -> . expression ;
    (8) statement -> . declaration ;
    (9) statement -> . compound_statement
    (21) statement -> . RETURN expression ;
    (22) statement -> . RETURN ;
    (23) statement -> . BREAK ;
    (24) statement -> . CONTINUE ;
    (25) statement -> . WHILE ( expression ) statement
    (26) statement -> . DO statement WHILE ( expression ) ;
    (27) statement -> . FOR ( expression ; expression ; expression ) statement
    (28) statement -> . IF ( expression ) statement
    (29) statement -> . IF ( expression ) statement ELSE statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (30) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (31) declaration -> . declaration_specifier ID [ NUMBER ]
    (32) declaration -> . declaration_specifier ID [ FLOAT ] = { expression_list }
    (33) declaration -> . declaration_specifier ID [ FLOAT ]
    (34) declaration -> . declaration_specifier ID = expression
    (35) declaration -> . declaration_specifier ID
    (83) compound_statement -> . { statement_list }
    (84) compound_statement -> . { }
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression
    (14) declaration_specifier -> . VOID
    (15) declaration_specifier -> . INT
    (16) declaration_specifier -> . CHAR
    (17) declaration_specifier -> . FLOAT
    (18) declaration_specifier -> . INT pointer
    (19) declaration_specifier -> . CHAR pointer
    (20) declaration_specifier -> . FLOAT pointer

    RETURN          shift and go to state 91
    BREAK           shift and go to state 92
    CONTINUE        shift and go to state 93
    WHILE           shift and go to state 94
    DO              shift and go to state 95
    FOR             shift and go to state 96
    IF              shift and go to state 97
    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 98
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40
    {               shift and go to state 44
    VOID            shift and go to state 7
    INT             shift and go to state 8
    CHAR            shift and go to state 9

    expression                     shift and go to state 88
    statement                      shift and go to state 173
    declaration                    shift and go to state 89
    compound_statement             shift and go to state 90
    eq_exp                         shift and go to state 41
    declaration_specifier          shift and go to state 21

state 167

    (26) statement -> DO statement WHILE ( . expression ) ;
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 174
    eq_exp                         shift and go to state 41

state 168

    (27) statement -> FOR ( expression ; . expression ; expression ) statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 175
    eq_exp                         shift and go to state 41

state 169

    (28) statement -> IF ( expression ) . statement
    (29) statement -> IF ( expression ) . statement ELSE statement
    (7) statement -> . expression ;
    (8) statement -> . declaration ;
    (9) statement -> . compound_statement
    (21) statement -> . RETURN expression ;
    (22) statement -> . RETURN ;
    (23) statement -> . BREAK ;
    (24) statement -> . CONTINUE ;
    (25) statement -> . WHILE ( expression ) statement
    (26) statement -> . DO statement WHILE ( expression ) ;
    (27) statement -> . FOR ( expression ; expression ; expression ) statement
    (28) statement -> . IF ( expression ) statement
    (29) statement -> . IF ( expression ) statement ELSE statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (30) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (31) declaration -> . declaration_specifier ID [ NUMBER ]
    (32) declaration -> . declaration_specifier ID [ FLOAT ] = { expression_list }
    (33) declaration -> . declaration_specifier ID [ FLOAT ]
    (34) declaration -> . declaration_specifier ID = expression
    (35) declaration -> . declaration_specifier ID
    (83) compound_statement -> . { statement_list }
    (84) compound_statement -> . { }
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression
    (14) declaration_specifier -> . VOID
    (15) declaration_specifier -> . INT
    (16) declaration_specifier -> . CHAR
    (17) declaration_specifier -> . FLOAT
    (18) declaration_specifier -> . INT pointer
    (19) declaration_specifier -> . CHAR pointer
    (20) declaration_specifier -> . FLOAT pointer

    RETURN          shift and go to state 91
    BREAK           shift and go to state 92
    CONTINUE        shift and go to state 93
    WHILE           shift and go to state 94
    DO              shift and go to state 95
    FOR             shift and go to state 96
    IF              shift and go to state 97
    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 98
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40
    {               shift and go to state 44
    VOID            shift and go to state 7
    INT             shift and go to state 8
    CHAR            shift and go to state 9

    expression                     shift and go to state 88
    statement                      shift and go to state 176
    declaration                    shift and go to state 89
    compound_statement             shift and go to state 90
    eq_exp                         shift and go to state 41
    declaration_specifier          shift and go to state 21

state 170

    (30) declaration -> declaration_specifier ID [ NUMBER ] = { expression_list } .

    ;               reduce using rule 30 (declaration -> declaration_specifier ID [ NUMBER ] = { expression_list } .)
    )               reduce using rule 30 (declaration -> declaration_specifier ID [ NUMBER ] = { expression_list } .)
    ,               reduce using rule 30 (declaration -> declaration_specifier ID [ NUMBER ] = { expression_list } .)


state 171

    (32) declaration -> declaration_specifier ID [ FLOAT ] = { expression_list } .

    ;               reduce using rule 32 (declaration -> declaration_specifier ID [ FLOAT ] = { expression_list } .)
    )               reduce using rule 32 (declaration -> declaration_specifier ID [ FLOAT ] = { expression_list } .)
    ,               reduce using rule 32 (declaration -> declaration_specifier ID [ FLOAT ] = { expression_list } .)


state 172

    (63) expression -> ID [ expression ] = expression .
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for & resolved as shift
  ! shift/reduce conflict for | resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
    ;               reduce using rule 63 (expression -> ID [ expression ] = expression .)
    )               reduce using rule 63 (expression -> ID [ expression ] = expression .)
    ,               reduce using rule 63 (expression -> ID [ expression ] = expression .)
    ]               reduce using rule 63 (expression -> ID [ expression ] = expression .)
    }               reduce using rule 63 (expression -> ID [ expression ] = expression .)
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75

  ! +               [ reduce using rule 63 (expression -> ID [ expression ] = expression .) ]
  ! -               [ reduce using rule 63 (expression -> ID [ expression ] = expression .) ]
  ! *               [ reduce using rule 63 (expression -> ID [ expression ] = expression .) ]
  ! /               [ reduce using rule 63 (expression -> ID [ expression ] = expression .) ]
  ! &               [ reduce using rule 63 (expression -> ID [ expression ] = expression .) ]
  ! |               [ reduce using rule 63 (expression -> ID [ expression ] = expression .) ]
  ! ^               [ reduce using rule 63 (expression -> ID [ expression ] = expression .) ]
  ! EQ              [ reduce using rule 63 (expression -> ID [ expression ] = expression .) ]
  ! NE              [ reduce using rule 63 (expression -> ID [ expression ] = expression .) ]
  ! LOR             [ reduce using rule 63 (expression -> ID [ expression ] = expression .) ]
  ! LAND            [ reduce using rule 63 (expression -> ID [ expression ] = expression .) ]
  ! <               [ reduce using rule 63 (expression -> ID [ expression ] = expression .) ]
  ! >               [ reduce using rule 63 (expression -> ID [ expression ] = expression .) ]
  ! GE              [ reduce using rule 63 (expression -> ID [ expression ] = expression .) ]
  ! LE              [ reduce using rule 63 (expression -> ID [ expression ] = expression .) ]


state 173

    (25) statement -> WHILE ( expression ) statement .

    }               reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    RETURN          reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    BREAK           reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    CONTINUE        reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    WHILE           reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    DO              reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    FOR             reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    IF              reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    ID              reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    ASM             reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    PRINTSTR        reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    MINUSMINUS      reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    PLUSPLUS        reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    ~               reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    -               reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    (               reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    NUMBER          reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    FLOAT           reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    &               reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    *               reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    C_CONST         reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    {               reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    VOID            reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    INT             reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    CHAR            reduce using rule 25 (statement -> WHILE ( expression ) statement .)
    ELSE            reduce using rule 25 (statement -> WHILE ( expression ) statement .)


state 174

    (26) statement -> DO statement WHILE ( expression . ) ;
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    )               shift and go to state 177
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75


state 175

    (27) statement -> FOR ( expression ; expression . ; expression ) statement
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    ;               shift and go to state 178
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75


state 176

    (28) statement -> IF ( expression ) statement .
    (29) statement -> IF ( expression ) statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    }               reduce using rule 28 (statement -> IF ( expression ) statement .)
    RETURN          reduce using rule 28 (statement -> IF ( expression ) statement .)
    BREAK           reduce using rule 28 (statement -> IF ( expression ) statement .)
    CONTINUE        reduce using rule 28 (statement -> IF ( expression ) statement .)
    WHILE           reduce using rule 28 (statement -> IF ( expression ) statement .)
    DO              reduce using rule 28 (statement -> IF ( expression ) statement .)
    FOR             reduce using rule 28 (statement -> IF ( expression ) statement .)
    IF              reduce using rule 28 (statement -> IF ( expression ) statement .)
    ID              reduce using rule 28 (statement -> IF ( expression ) statement .)
    ASM             reduce using rule 28 (statement -> IF ( expression ) statement .)
    PRINTSTR        reduce using rule 28 (statement -> IF ( expression ) statement .)
    MINUSMINUS      reduce using rule 28 (statement -> IF ( expression ) statement .)
    PLUSPLUS        reduce using rule 28 (statement -> IF ( expression ) statement .)
    ~               reduce using rule 28 (statement -> IF ( expression ) statement .)
    -               reduce using rule 28 (statement -> IF ( expression ) statement .)
    (               reduce using rule 28 (statement -> IF ( expression ) statement .)
    NUMBER          reduce using rule 28 (statement -> IF ( expression ) statement .)
    FLOAT           reduce using rule 28 (statement -> IF ( expression ) statement .)
    &               reduce using rule 28 (statement -> IF ( expression ) statement .)
    *               reduce using rule 28 (statement -> IF ( expression ) statement .)
    C_CONST         reduce using rule 28 (statement -> IF ( expression ) statement .)
    {               reduce using rule 28 (statement -> IF ( expression ) statement .)
    VOID            reduce using rule 28 (statement -> IF ( expression ) statement .)
    INT             reduce using rule 28 (statement -> IF ( expression ) statement .)
    CHAR            reduce using rule 28 (statement -> IF ( expression ) statement .)
    ELSE            shift and go to state 179

  ! ELSE            [ reduce using rule 28 (statement -> IF ( expression ) statement .) ]


state 177

    (26) statement -> DO statement WHILE ( expression ) . ;

    ;               shift and go to state 180


state 178

    (27) statement -> FOR ( expression ; expression ; . expression ) statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression

    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40

    expression                     shift and go to state 181
    eq_exp                         shift and go to state 41

state 179

    (29) statement -> IF ( expression ) statement ELSE . statement
    (7) statement -> . expression ;
    (8) statement -> . declaration ;
    (9) statement -> . compound_statement
    (21) statement -> . RETURN expression ;
    (22) statement -> . RETURN ;
    (23) statement -> . BREAK ;
    (24) statement -> . CONTINUE ;
    (25) statement -> . WHILE ( expression ) statement
    (26) statement -> . DO statement WHILE ( expression ) ;
    (27) statement -> . FOR ( expression ; expression ; expression ) statement
    (28) statement -> . IF ( expression ) statement
    (29) statement -> . IF ( expression ) statement ELSE statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (30) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (31) declaration -> . declaration_specifier ID [ NUMBER ]
    (32) declaration -> . declaration_specifier ID [ FLOAT ] = { expression_list }
    (33) declaration -> . declaration_specifier ID [ FLOAT ]
    (34) declaration -> . declaration_specifier ID = expression
    (35) declaration -> . declaration_specifier ID
    (83) compound_statement -> . { statement_list }
    (84) compound_statement -> . { }
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression
    (14) declaration_specifier -> . VOID
    (15) declaration_specifier -> . INT
    (16) declaration_specifier -> . CHAR
    (17) declaration_specifier -> . FLOAT
    (18) declaration_specifier -> . INT pointer
    (19) declaration_specifier -> . CHAR pointer
    (20) declaration_specifier -> . FLOAT pointer

    RETURN          shift and go to state 91
    BREAK           shift and go to state 92
    CONTINUE        shift and go to state 93
    WHILE           shift and go to state 94
    DO              shift and go to state 95
    FOR             shift and go to state 96
    IF              shift and go to state 97
    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 98
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40
    {               shift and go to state 44
    VOID            shift and go to state 7
    INT             shift and go to state 8
    CHAR            shift and go to state 9

    expression                     shift and go to state 88
    statement                      shift and go to state 182
    declaration                    shift and go to state 89
    compound_statement             shift and go to state 90
    eq_exp                         shift and go to state 41
    declaration_specifier          shift and go to state 21

state 180

    (26) statement -> DO statement WHILE ( expression ) ; .

    }               reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    RETURN          reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    BREAK           reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    CONTINUE        reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    WHILE           reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    DO              reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    FOR             reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    IF              reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    ID              reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    ASM             reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    PRINTSTR        reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    MINUSMINUS      reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    PLUSPLUS        reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    ~               reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    -               reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    (               reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    NUMBER          reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    FLOAT           reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    &               reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    *               reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    C_CONST         reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    {               reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    VOID            reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    INT             reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    CHAR            reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)
    ELSE            reduce using rule 26 (statement -> DO statement WHILE ( expression ) ; .)


state 181

    (27) statement -> FOR ( expression ; expression ; expression . ) statement
    (52) expression -> expression . + expression
    (53) expression -> expression . - expression
    (54) expression -> expression . * expression
    (55) expression -> expression . / expression
    (56) expression -> expression . & expression
    (57) expression -> expression . | expression
    (58) expression -> expression . ^ expression
    (75) eq_exp -> expression . EQ expression
    (76) eq_exp -> expression . NE expression
    (77) eq_exp -> expression . LOR expression
    (78) eq_exp -> expression . LAND expression
    (79) eq_exp -> expression . < expression
    (80) eq_exp -> expression . > expression
    (81) eq_exp -> expression . GE expression
    (82) eq_exp -> expression . LE expression

    )               shift and go to state 183
    +               shift and go to state 61
    -               shift and go to state 62
    *               shift and go to state 63
    /               shift and go to state 64
    &               shift and go to state 65
    |               shift and go to state 66
    ^               shift and go to state 67
    EQ              shift and go to state 68
    NE              shift and go to state 69
    LOR             shift and go to state 70
    LAND            shift and go to state 71
    <               shift and go to state 72
    >               shift and go to state 73
    GE              shift and go to state 74
    LE              shift and go to state 75


state 182

    (29) statement -> IF ( expression ) statement ELSE statement .

    }               reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    RETURN          reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    BREAK           reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    CONTINUE        reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    WHILE           reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    DO              reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    FOR             reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    IF              reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    ID              reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    ASM             reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    PRINTSTR        reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    MINUSMINUS      reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    PLUSPLUS        reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    ~               reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    -               reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    (               reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    NUMBER          reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    FLOAT           reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    &               reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    *               reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    C_CONST         reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    {               reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    VOID            reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    INT             reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    CHAR            reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)
    ELSE            reduce using rule 29 (statement -> IF ( expression ) statement ELSE statement .)


state 183

    (27) statement -> FOR ( expression ; expression ; expression ) . statement
    (7) statement -> . expression ;
    (8) statement -> . declaration ;
    (9) statement -> . compound_statement
    (21) statement -> . RETURN expression ;
    (22) statement -> . RETURN ;
    (23) statement -> . BREAK ;
    (24) statement -> . CONTINUE ;
    (25) statement -> . WHILE ( expression ) statement
    (26) statement -> . DO statement WHILE ( expression ) ;
    (27) statement -> . FOR ( expression ; expression ; expression ) statement
    (28) statement -> . IF ( expression ) statement
    (29) statement -> . IF ( expression ) statement ELSE statement
    (10) expression -> . ID ( )
    (11) expression -> . ID ( expression_list )
    (12) expression -> . ASM ( S_CONST )
    (13) expression -> . PRINTSTR ( S_CONST )
    (36) expression -> . MINUSMINUS ID
    (37) expression -> . ID MINUSMINUS
    (38) expression -> . PLUSPLUS ID
    (39) expression -> . ID PLUSPLUS
    (40) expression -> . ID XOREQUAL expression
    (41) expression -> . ID ANDEQUAL expression
    (42) expression -> . ID OREQUAL expression
    (43) expression -> . ID TIMESEQUAL expression
    (44) expression -> . ID DIVEQUAL expression
    (45) expression -> . ID PLUSEQUAL expression
    (46) expression -> . ID MINUSEQUAL expression
    (47) expression -> . ID = expression
    (52) expression -> . expression + expression
    (53) expression -> . expression - expression
    (54) expression -> . expression * expression
    (55) expression -> . expression / expression
    (56) expression -> . expression & expression
    (57) expression -> . expression | expression
    (58) expression -> . expression ^ expression
    (59) expression -> . ~ expression
    (60) expression -> . - expression
    (61) expression -> . ( expression )
    (62) expression -> . ID [ expression ]
    (63) expression -> . ID [ expression ] = expression
    (64) expression -> . NUMBER
    (65) expression -> . FLOAT
    (66) expression -> . ID
    (67) expression -> . & ID
    (68) expression -> . & ID [ expression ]
    (69) expression -> . * ID = expression
    (70) expression -> . * ID
    (73) expression -> . C_CONST
    (74) expression -> . eq_exp
    (30) declaration -> . declaration_specifier ID [ NUMBER ] = { expression_list }
    (31) declaration -> . declaration_specifier ID [ NUMBER ]
    (32) declaration -> . declaration_specifier ID [ FLOAT ] = { expression_list }
    (33) declaration -> . declaration_specifier ID [ FLOAT ]
    (34) declaration -> . declaration_specifier ID = expression
    (35) declaration -> . declaration_specifier ID
    (83) compound_statement -> . { statement_list }
    (84) compound_statement -> . { }
    (75) eq_exp -> . expression EQ expression
    (76) eq_exp -> . expression NE expression
    (77) eq_exp -> . expression LOR expression
    (78) eq_exp -> . expression LAND expression
    (79) eq_exp -> . expression < expression
    (80) eq_exp -> . expression > expression
    (81) eq_exp -> . expression GE expression
    (82) eq_exp -> . expression LE expression
    (14) declaration_specifier -> . VOID
    (15) declaration_specifier -> . INT
    (16) declaration_specifier -> . CHAR
    (17) declaration_specifier -> . FLOAT
    (18) declaration_specifier -> . INT pointer
    (19) declaration_specifier -> . CHAR pointer
    (20) declaration_specifier -> . FLOAT pointer

    RETURN          shift and go to state 91
    BREAK           shift and go to state 92
    CONTINUE        shift and go to state 93
    WHILE           shift and go to state 94
    DO              shift and go to state 95
    FOR             shift and go to state 96
    IF              shift and go to state 97
    ID              shift and go to state 27
    ASM             shift and go to state 30
    PRINTSTR        shift and go to state 31
    MINUSMINUS      shift and go to state 32
    PLUSPLUS        shift and go to state 33
    ~               shift and go to state 37
    -               shift and go to state 34
    (               shift and go to state 29
    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 98
    &               shift and go to state 36
    *               shift and go to state 35
    C_CONST         shift and go to state 40
    {               shift and go to state 44
    VOID            shift and go to state 7
    INT             shift and go to state 8
    CHAR            shift and go to state 9

    expression                     shift and go to state 88
    statement                      shift and go to state 184
    declaration                    shift and go to state 89
    compound_statement             shift and go to state 90
    eq_exp                         shift and go to state 41
    declaration_specifier          shift and go to state 21

state 184

    (27) statement -> FOR ( expression ; expression ; expression ) statement .

    }               reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    RETURN          reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    BREAK           reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    CONTINUE        reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    WHILE           reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    DO              reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    FOR             reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    IF              reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    ID              reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    ASM             reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    PRINTSTR        reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    MINUSMINUS      reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    PLUSPLUS        reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    ~               reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    -               reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    (               reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    NUMBER          reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    FLOAT           reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    &               reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    *               reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    C_CONST         reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    {               reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    VOID            reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    INT             reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    CHAR            reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)
    ELSE            reduce using rule 27 (statement -> FOR ( expression ; expression ; expression ) statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for * in state 98 resolved as shift
WARNING: shift/reduce conflict for + in state 106 resolved as shift
WARNING: shift/reduce conflict for - in state 106 resolved as shift
WARNING: shift/reduce conflict for * in state 106 resolved as shift
WARNING: shift/reduce conflict for / in state 106 resolved as shift
WARNING: shift/reduce conflict for & in state 106 resolved as shift
WARNING: shift/reduce conflict for | in state 106 resolved as shift
WARNING: shift/reduce conflict for ^ in state 106 resolved as shift
WARNING: shift/reduce conflict for EQ in state 106 resolved as shift
WARNING: shift/reduce conflict for NE in state 106 resolved as shift
WARNING: shift/reduce conflict for LOR in state 106 resolved as shift
WARNING: shift/reduce conflict for LAND in state 106 resolved as shift
WARNING: shift/reduce conflict for < in state 106 resolved as shift
WARNING: shift/reduce conflict for > in state 106 resolved as shift
WARNING: shift/reduce conflict for GE in state 106 resolved as shift
WARNING: shift/reduce conflict for LE in state 106 resolved as shift
WARNING: shift/reduce conflict for + in state 107 resolved as shift
WARNING: shift/reduce conflict for - in state 107 resolved as shift
WARNING: shift/reduce conflict for * in state 107 resolved as shift
WARNING: shift/reduce conflict for / in state 107 resolved as shift
WARNING: shift/reduce conflict for & in state 107 resolved as shift
WARNING: shift/reduce conflict for | in state 107 resolved as shift
WARNING: shift/reduce conflict for ^ in state 107 resolved as shift
WARNING: shift/reduce conflict for EQ in state 107 resolved as shift
WARNING: shift/reduce conflict for NE in state 107 resolved as shift
WARNING: shift/reduce conflict for LOR in state 107 resolved as shift
WARNING: shift/reduce conflict for LAND in state 107 resolved as shift
WARNING: shift/reduce conflict for < in state 107 resolved as shift
WARNING: shift/reduce conflict for > in state 107 resolved as shift
WARNING: shift/reduce conflict for GE in state 107 resolved as shift
WARNING: shift/reduce conflict for LE in state 107 resolved as shift
WARNING: shift/reduce conflict for + in state 108 resolved as shift
WARNING: shift/reduce conflict for - in state 108 resolved as shift
WARNING: shift/reduce conflict for * in state 108 resolved as shift
WARNING: shift/reduce conflict for / in state 108 resolved as shift
WARNING: shift/reduce conflict for & in state 108 resolved as shift
WARNING: shift/reduce conflict for | in state 108 resolved as shift
WARNING: shift/reduce conflict for ^ in state 108 resolved as shift
WARNING: shift/reduce conflict for EQ in state 108 resolved as shift
WARNING: shift/reduce conflict for NE in state 108 resolved as shift
WARNING: shift/reduce conflict for LOR in state 108 resolved as shift
WARNING: shift/reduce conflict for LAND in state 108 resolved as shift
WARNING: shift/reduce conflict for < in state 108 resolved as shift
WARNING: shift/reduce conflict for > in state 108 resolved as shift
WARNING: shift/reduce conflict for GE in state 108 resolved as shift
WARNING: shift/reduce conflict for LE in state 108 resolved as shift
WARNING: shift/reduce conflict for + in state 109 resolved as shift
WARNING: shift/reduce conflict for - in state 109 resolved as shift
WARNING: shift/reduce conflict for * in state 109 resolved as shift
WARNING: shift/reduce conflict for / in state 109 resolved as shift
WARNING: shift/reduce conflict for & in state 109 resolved as shift
WARNING: shift/reduce conflict for | in state 109 resolved as shift
WARNING: shift/reduce conflict for ^ in state 109 resolved as shift
WARNING: shift/reduce conflict for EQ in state 109 resolved as shift
WARNING: shift/reduce conflict for NE in state 109 resolved as shift
WARNING: shift/reduce conflict for LOR in state 109 resolved as shift
WARNING: shift/reduce conflict for LAND in state 109 resolved as shift
WARNING: shift/reduce conflict for < in state 109 resolved as shift
WARNING: shift/reduce conflict for > in state 109 resolved as shift
WARNING: shift/reduce conflict for GE in state 109 resolved as shift
WARNING: shift/reduce conflict for LE in state 109 resolved as shift
WARNING: shift/reduce conflict for + in state 110 resolved as shift
WARNING: shift/reduce conflict for - in state 110 resolved as shift
WARNING: shift/reduce conflict for * in state 110 resolved as shift
WARNING: shift/reduce conflict for / in state 110 resolved as shift
WARNING: shift/reduce conflict for & in state 110 resolved as shift
WARNING: shift/reduce conflict for | in state 110 resolved as shift
WARNING: shift/reduce conflict for ^ in state 110 resolved as shift
WARNING: shift/reduce conflict for EQ in state 110 resolved as shift
WARNING: shift/reduce conflict for NE in state 110 resolved as shift
WARNING: shift/reduce conflict for LOR in state 110 resolved as shift
WARNING: shift/reduce conflict for LAND in state 110 resolved as shift
WARNING: shift/reduce conflict for < in state 110 resolved as shift
WARNING: shift/reduce conflict for > in state 110 resolved as shift
WARNING: shift/reduce conflict for GE in state 110 resolved as shift
WARNING: shift/reduce conflict for LE in state 110 resolved as shift
WARNING: shift/reduce conflict for + in state 111 resolved as shift
WARNING: shift/reduce conflict for - in state 111 resolved as shift
WARNING: shift/reduce conflict for * in state 111 resolved as shift
WARNING: shift/reduce conflict for / in state 111 resolved as shift
WARNING: shift/reduce conflict for & in state 111 resolved as shift
WARNING: shift/reduce conflict for | in state 111 resolved as shift
WARNING: shift/reduce conflict for ^ in state 111 resolved as shift
WARNING: shift/reduce conflict for EQ in state 111 resolved as shift
WARNING: shift/reduce conflict for NE in state 111 resolved as shift
WARNING: shift/reduce conflict for LOR in state 111 resolved as shift
WARNING: shift/reduce conflict for LAND in state 111 resolved as shift
WARNING: shift/reduce conflict for < in state 111 resolved as shift
WARNING: shift/reduce conflict for > in state 111 resolved as shift
WARNING: shift/reduce conflict for GE in state 111 resolved as shift
WARNING: shift/reduce conflict for LE in state 111 resolved as shift
WARNING: shift/reduce conflict for + in state 112 resolved as shift
WARNING: shift/reduce conflict for - in state 112 resolved as shift
WARNING: shift/reduce conflict for * in state 112 resolved as shift
WARNING: shift/reduce conflict for / in state 112 resolved as shift
WARNING: shift/reduce conflict for & in state 112 resolved as shift
WARNING: shift/reduce conflict for | in state 112 resolved as shift
WARNING: shift/reduce conflict for ^ in state 112 resolved as shift
WARNING: shift/reduce conflict for EQ in state 112 resolved as shift
WARNING: shift/reduce conflict for NE in state 112 resolved as shift
WARNING: shift/reduce conflict for LOR in state 112 resolved as shift
WARNING: shift/reduce conflict for LAND in state 112 resolved as shift
WARNING: shift/reduce conflict for < in state 112 resolved as shift
WARNING: shift/reduce conflict for > in state 112 resolved as shift
WARNING: shift/reduce conflict for GE in state 112 resolved as shift
WARNING: shift/reduce conflict for LE in state 112 resolved as shift
WARNING: shift/reduce conflict for + in state 113 resolved as shift
WARNING: shift/reduce conflict for - in state 113 resolved as shift
WARNING: shift/reduce conflict for * in state 113 resolved as shift
WARNING: shift/reduce conflict for / in state 113 resolved as shift
WARNING: shift/reduce conflict for & in state 113 resolved as shift
WARNING: shift/reduce conflict for | in state 113 resolved as shift
WARNING: shift/reduce conflict for ^ in state 113 resolved as shift
WARNING: shift/reduce conflict for EQ in state 113 resolved as shift
WARNING: shift/reduce conflict for NE in state 113 resolved as shift
WARNING: shift/reduce conflict for LOR in state 113 resolved as shift
WARNING: shift/reduce conflict for LAND in state 113 resolved as shift
WARNING: shift/reduce conflict for < in state 113 resolved as shift
WARNING: shift/reduce conflict for > in state 113 resolved as shift
WARNING: shift/reduce conflict for GE in state 113 resolved as shift
WARNING: shift/reduce conflict for LE in state 113 resolved as shift
WARNING: shift/reduce conflict for + in state 119 resolved as shift
WARNING: shift/reduce conflict for - in state 119 resolved as shift
WARNING: shift/reduce conflict for * in state 119 resolved as shift
WARNING: shift/reduce conflict for / in state 119 resolved as shift
WARNING: shift/reduce conflict for & in state 119 resolved as shift
WARNING: shift/reduce conflict for | in state 119 resolved as shift
WARNING: shift/reduce conflict for ^ in state 119 resolved as shift
WARNING: shift/reduce conflict for EQ in state 119 resolved as shift
WARNING: shift/reduce conflict for NE in state 119 resolved as shift
WARNING: shift/reduce conflict for LOR in state 119 resolved as shift
WARNING: shift/reduce conflict for LAND in state 119 resolved as shift
WARNING: shift/reduce conflict for < in state 119 resolved as shift
WARNING: shift/reduce conflict for > in state 119 resolved as shift
WARNING: shift/reduce conflict for GE in state 119 resolved as shift
WARNING: shift/reduce conflict for LE in state 119 resolved as shift
WARNING: shift/reduce conflict for + in state 120 resolved as shift
WARNING: shift/reduce conflict for - in state 120 resolved as shift
WARNING: shift/reduce conflict for * in state 120 resolved as shift
WARNING: shift/reduce conflict for / in state 120 resolved as shift
WARNING: shift/reduce conflict for & in state 120 resolved as shift
WARNING: shift/reduce conflict for | in state 120 resolved as shift
WARNING: shift/reduce conflict for ^ in state 120 resolved as shift
WARNING: shift/reduce conflict for EQ in state 120 resolved as shift
WARNING: shift/reduce conflict for NE in state 120 resolved as shift
WARNING: shift/reduce conflict for LOR in state 120 resolved as shift
WARNING: shift/reduce conflict for LAND in state 120 resolved as shift
WARNING: shift/reduce conflict for < in state 120 resolved as shift
WARNING: shift/reduce conflict for > in state 120 resolved as shift
WARNING: shift/reduce conflict for GE in state 120 resolved as shift
WARNING: shift/reduce conflict for LE in state 120 resolved as shift
WARNING: shift/reduce conflict for + in state 121 resolved as shift
WARNING: shift/reduce conflict for - in state 121 resolved as shift
WARNING: shift/reduce conflict for * in state 121 resolved as shift
WARNING: shift/reduce conflict for / in state 121 resolved as shift
WARNING: shift/reduce conflict for & in state 121 resolved as shift
WARNING: shift/reduce conflict for | in state 121 resolved as shift
WARNING: shift/reduce conflict for ^ in state 121 resolved as shift
WARNING: shift/reduce conflict for EQ in state 121 resolved as shift
WARNING: shift/reduce conflict for NE in state 121 resolved as shift
WARNING: shift/reduce conflict for LOR in state 121 resolved as shift
WARNING: shift/reduce conflict for LAND in state 121 resolved as shift
WARNING: shift/reduce conflict for < in state 121 resolved as shift
WARNING: shift/reduce conflict for > in state 121 resolved as shift
WARNING: shift/reduce conflict for GE in state 121 resolved as shift
WARNING: shift/reduce conflict for LE in state 121 resolved as shift
WARNING: shift/reduce conflict for + in state 122 resolved as shift
WARNING: shift/reduce conflict for - in state 122 resolved as shift
WARNING: shift/reduce conflict for * in state 122 resolved as shift
WARNING: shift/reduce conflict for / in state 122 resolved as shift
WARNING: shift/reduce conflict for & in state 122 resolved as shift
WARNING: shift/reduce conflict for | in state 122 resolved as shift
WARNING: shift/reduce conflict for ^ in state 122 resolved as shift
WARNING: shift/reduce conflict for EQ in state 122 resolved as shift
WARNING: shift/reduce conflict for NE in state 122 resolved as shift
WARNING: shift/reduce conflict for LOR in state 122 resolved as shift
WARNING: shift/reduce conflict for LAND in state 122 resolved as shift
WARNING: shift/reduce conflict for < in state 122 resolved as shift
WARNING: shift/reduce conflict for > in state 122 resolved as shift
WARNING: shift/reduce conflict for GE in state 122 resolved as shift
WARNING: shift/reduce conflict for LE in state 122 resolved as shift
WARNING: shift/reduce conflict for + in state 123 resolved as shift
WARNING: shift/reduce conflict for - in state 123 resolved as shift
WARNING: shift/reduce conflict for * in state 123 resolved as shift
WARNING: shift/reduce conflict for / in state 123 resolved as shift
WARNING: shift/reduce conflict for & in state 123 resolved as shift
WARNING: shift/reduce conflict for | in state 123 resolved as shift
WARNING: shift/reduce conflict for ^ in state 123 resolved as shift
WARNING: shift/reduce conflict for EQ in state 123 resolved as shift
WARNING: shift/reduce conflict for NE in state 123 resolved as shift
WARNING: shift/reduce conflict for LOR in state 123 resolved as shift
WARNING: shift/reduce conflict for LAND in state 123 resolved as shift
WARNING: shift/reduce conflict for < in state 123 resolved as shift
WARNING: shift/reduce conflict for > in state 123 resolved as shift
WARNING: shift/reduce conflict for GE in state 123 resolved as shift
WARNING: shift/reduce conflict for LE in state 123 resolved as shift
WARNING: shift/reduce conflict for + in state 124 resolved as shift
WARNING: shift/reduce conflict for - in state 124 resolved as shift
WARNING: shift/reduce conflict for * in state 124 resolved as shift
WARNING: shift/reduce conflict for / in state 124 resolved as shift
WARNING: shift/reduce conflict for & in state 124 resolved as shift
WARNING: shift/reduce conflict for | in state 124 resolved as shift
WARNING: shift/reduce conflict for ^ in state 124 resolved as shift
WARNING: shift/reduce conflict for EQ in state 124 resolved as shift
WARNING: shift/reduce conflict for NE in state 124 resolved as shift
WARNING: shift/reduce conflict for LOR in state 124 resolved as shift
WARNING: shift/reduce conflict for LAND in state 124 resolved as shift
WARNING: shift/reduce conflict for < in state 124 resolved as shift
WARNING: shift/reduce conflict for > in state 124 resolved as shift
WARNING: shift/reduce conflict for GE in state 124 resolved as shift
WARNING: shift/reduce conflict for LE in state 124 resolved as shift
WARNING: shift/reduce conflict for + in state 125 resolved as shift
WARNING: shift/reduce conflict for - in state 125 resolved as shift
WARNING: shift/reduce conflict for * in state 125 resolved as shift
WARNING: shift/reduce conflict for / in state 125 resolved as shift
WARNING: shift/reduce conflict for & in state 125 resolved as shift
WARNING: shift/reduce conflict for | in state 125 resolved as shift
WARNING: shift/reduce conflict for ^ in state 125 resolved as shift
WARNING: shift/reduce conflict for EQ in state 125 resolved as shift
WARNING: shift/reduce conflict for NE in state 125 resolved as shift
WARNING: shift/reduce conflict for LOR in state 125 resolved as shift
WARNING: shift/reduce conflict for LAND in state 125 resolved as shift
WARNING: shift/reduce conflict for < in state 125 resolved as shift
WARNING: shift/reduce conflict for > in state 125 resolved as shift
WARNING: shift/reduce conflict for GE in state 125 resolved as shift
WARNING: shift/reduce conflict for LE in state 125 resolved as shift
WARNING: shift/reduce conflict for + in state 126 resolved as shift
WARNING: shift/reduce conflict for - in state 126 resolved as shift
WARNING: shift/reduce conflict for * in state 126 resolved as shift
WARNING: shift/reduce conflict for / in state 126 resolved as shift
WARNING: shift/reduce conflict for & in state 126 resolved as shift
WARNING: shift/reduce conflict for | in state 126 resolved as shift
WARNING: shift/reduce conflict for ^ in state 126 resolved as shift
WARNING: shift/reduce conflict for EQ in state 126 resolved as shift
WARNING: shift/reduce conflict for NE in state 126 resolved as shift
WARNING: shift/reduce conflict for LOR in state 126 resolved as shift
WARNING: shift/reduce conflict for LAND in state 126 resolved as shift
WARNING: shift/reduce conflict for < in state 126 resolved as shift
WARNING: shift/reduce conflict for > in state 126 resolved as shift
WARNING: shift/reduce conflict for GE in state 126 resolved as shift
WARNING: shift/reduce conflict for LE in state 126 resolved as shift
WARNING: shift/reduce conflict for + in state 127 resolved as shift
WARNING: shift/reduce conflict for - in state 127 resolved as shift
WARNING: shift/reduce conflict for * in state 127 resolved as shift
WARNING: shift/reduce conflict for / in state 127 resolved as shift
WARNING: shift/reduce conflict for & in state 127 resolved as shift
WARNING: shift/reduce conflict for | in state 127 resolved as shift
WARNING: shift/reduce conflict for ^ in state 127 resolved as shift
WARNING: shift/reduce conflict for EQ in state 127 resolved as shift
WARNING: shift/reduce conflict for NE in state 127 resolved as shift
WARNING: shift/reduce conflict for LOR in state 127 resolved as shift
WARNING: shift/reduce conflict for LAND in state 127 resolved as shift
WARNING: shift/reduce conflict for < in state 127 resolved as shift
WARNING: shift/reduce conflict for > in state 127 resolved as shift
WARNING: shift/reduce conflict for GE in state 127 resolved as shift
WARNING: shift/reduce conflict for LE in state 127 resolved as shift
WARNING: shift/reduce conflict for + in state 128 resolved as shift
WARNING: shift/reduce conflict for - in state 128 resolved as shift
WARNING: shift/reduce conflict for * in state 128 resolved as shift
WARNING: shift/reduce conflict for / in state 128 resolved as shift
WARNING: shift/reduce conflict for & in state 128 resolved as shift
WARNING: shift/reduce conflict for | in state 128 resolved as shift
WARNING: shift/reduce conflict for ^ in state 128 resolved as shift
WARNING: shift/reduce conflict for EQ in state 128 resolved as shift
WARNING: shift/reduce conflict for NE in state 128 resolved as shift
WARNING: shift/reduce conflict for LOR in state 128 resolved as shift
WARNING: shift/reduce conflict for LAND in state 128 resolved as shift
WARNING: shift/reduce conflict for < in state 128 resolved as shift
WARNING: shift/reduce conflict for > in state 128 resolved as shift
WARNING: shift/reduce conflict for GE in state 128 resolved as shift
WARNING: shift/reduce conflict for LE in state 128 resolved as shift
WARNING: shift/reduce conflict for + in state 129 resolved as shift
WARNING: shift/reduce conflict for - in state 129 resolved as shift
WARNING: shift/reduce conflict for * in state 129 resolved as shift
WARNING: shift/reduce conflict for / in state 129 resolved as shift
WARNING: shift/reduce conflict for & in state 129 resolved as shift
WARNING: shift/reduce conflict for | in state 129 resolved as shift
WARNING: shift/reduce conflict for ^ in state 129 resolved as shift
WARNING: shift/reduce conflict for EQ in state 129 resolved as shift
WARNING: shift/reduce conflict for NE in state 129 resolved as shift
WARNING: shift/reduce conflict for LOR in state 129 resolved as shift
WARNING: shift/reduce conflict for LAND in state 129 resolved as shift
WARNING: shift/reduce conflict for < in state 129 resolved as shift
WARNING: shift/reduce conflict for > in state 129 resolved as shift
WARNING: shift/reduce conflict for GE in state 129 resolved as shift
WARNING: shift/reduce conflict for LE in state 129 resolved as shift
WARNING: shift/reduce conflict for + in state 154 resolved as shift
WARNING: shift/reduce conflict for - in state 154 resolved as shift
WARNING: shift/reduce conflict for * in state 154 resolved as shift
WARNING: shift/reduce conflict for / in state 154 resolved as shift
WARNING: shift/reduce conflict for & in state 154 resolved as shift
WARNING: shift/reduce conflict for | in state 154 resolved as shift
WARNING: shift/reduce conflict for ^ in state 154 resolved as shift
WARNING: shift/reduce conflict for EQ in state 154 resolved as shift
WARNING: shift/reduce conflict for NE in state 154 resolved as shift
WARNING: shift/reduce conflict for LOR in state 154 resolved as shift
WARNING: shift/reduce conflict for LAND in state 154 resolved as shift
WARNING: shift/reduce conflict for < in state 154 resolved as shift
WARNING: shift/reduce conflict for > in state 154 resolved as shift
WARNING: shift/reduce conflict for GE in state 154 resolved as shift
WARNING: shift/reduce conflict for LE in state 154 resolved as shift
WARNING: shift/reduce conflict for + in state 172 resolved as shift
WARNING: shift/reduce conflict for - in state 172 resolved as shift
WARNING: shift/reduce conflict for * in state 172 resolved as shift
WARNING: shift/reduce conflict for / in state 172 resolved as shift
WARNING: shift/reduce conflict for & in state 172 resolved as shift
WARNING: shift/reduce conflict for | in state 172 resolved as shift
WARNING: shift/reduce conflict for ^ in state 172 resolved as shift
WARNING: shift/reduce conflict for EQ in state 172 resolved as shift
WARNING: shift/reduce conflict for NE in state 172 resolved as shift
WARNING: shift/reduce conflict for LOR in state 172 resolved as shift
WARNING: shift/reduce conflict for LAND in state 172 resolved as shift
WARNING: shift/reduce conflict for < in state 172 resolved as shift
WARNING: shift/reduce conflict for > in state 172 resolved as shift
WARNING: shift/reduce conflict for GE in state 172 resolved as shift
WARNING: shift/reduce conflict for LE in state 172 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 176 resolved as shift
